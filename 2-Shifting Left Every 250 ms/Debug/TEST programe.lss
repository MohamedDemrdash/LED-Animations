
TEST programe.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000886  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000886  000008fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000008fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000100  00000000  00000000  00001050  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000de5  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000031e  00000000  00000000  00001f35  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000707  00000000  00000000  00002253  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000294  00000000  00000000  0000295c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000037a  00000000  00000000  00002bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009b5  00000000  00000000  00002f6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e8       	ldi	r30, 0x86	; 134
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 01 02 	call	0x402	; 0x402 <main>
  8a:	0c 94 41 04 	jmp	0x882	; 0x882 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <App_init>:
#include "../EUCAL/BUTTON Driver/BUTTON_interface.h"
#include "application.h"

void App_init(void)
{
	LED_InitPort('A');
  92:	81 e4       	ldi	r24, 0x41	; 65
  94:	0e 94 7f 00 	call	0xfe	; 0xfe <LED_InitPort>
}
  98:	08 95       	ret

0000009a <App_start>:

void App_start(void)
{
	while(1)
	{
			LED_ShiftLeft('A',250);		
  9a:	81 e4       	ldi	r24, 0x41	; 65
  9c:	4a ef       	ldi	r20, 0xFA	; 250
  9e:	50 e0       	ldi	r21, 0x00	; 0
  a0:	60 e0       	ldi	r22, 0x00	; 0
  a2:	70 e0       	ldi	r23, 0x00	; 0
  a4:	0e 94 96 00 	call	0x12c	; 0x12c <LED_ShiftLeft>
  a8:	f8 cf       	rjmp	.-16     	; 0x9a <App_start>

000000aa <BUTTON_init>:
#include "BUTTON_interface.h"
#include "../../MCAL/DIO Driver/DIO_interface.h"

void BUTTON_init(uint8_t port,uint8_t pin)
{
	DIO_write_pin(port,pin,INPUT);
  aa:	40 e0       	ldi	r20, 0x00	; 0
  ac:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
  b0:	08 95       	ret

000000b2 <BUTTON_u8get_value>:

uint8_t BUTTON_u8get_value(uint8_t port,uint8_t pin)
{
	uint8_t value = DIO_u8read_pin(port,pin);
  b2:	0e 94 77 03 	call	0x6ee	; 0x6ee <DIO_u8read_pin>
	return value; 
}
  b6:	08 95       	ret

000000b8 <LED_Init>:
#include "../../utilities/STD_Types.h"
#include "../../MCAL/DIO Driver/DIO_interface.h"
#include "LED_interface.h"

void LED_Init(uint8_t port,uint8_t pin)
{
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	d8 2f       	mov	r29, r24
  be:	c6 2f       	mov	r28, r22
	DIO_set_pin_dir(port,pin,OUTPUT);
  c0:	41 e0       	ldi	r20, 0x01	; 1
  c2:	0e 94 08 02 	call	0x410	; 0x410 <DIO_set_pin_dir>
	DIO_write_pin(port,pin,LOW);
  c6:	8d 2f       	mov	r24, r29
  c8:	6c 2f       	mov	r22, r28
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
  d0:	df 91       	pop	r29
  d2:	cf 91       	pop	r28
  d4:	08 95       	ret

000000d6 <LED_On>:

void LED_On(uint8_t port,uint8_t pin)
{
	DIO_write_pin(port,pin,HIGH);
  d6:	41 e0       	ldi	r20, 0x01	; 1
  d8:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
  dc:	08 95       	ret

000000de <LED_Off>:

void LED_Off(uint8_t port,uint8_t pin)
{
	DIO_write_pin(port,pin,LOW);
  de:	40 e0       	ldi	r20, 0x00	; 0
  e0:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
  e4:	08 95       	ret

000000e6 <LED_Tog>:

void LED_Tog(uint8_t port,uint8_t pin)
{
	DIO_toggle_pin(port,pin);
  e6:	0e 94 2a 03 	call	0x654	; 0x654 <DIO_toggle_pin>
}
  ea:	08 95       	ret

000000ec <LED_Flash>:

void LED_Flash(uint8_t port,uint8_t pin,uint32_t delay)
{
	DIO_toggle_pin(port,pin);
  ec:	0e 94 2a 03 	call	0x654	; 0x654 <DIO_toggle_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f0:	83 e2       	ldi	r24, 0x23	; 35
  f2:	94 ef       	ldi	r25, 0xF4	; 244
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <LED_Flash+0x8>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <LED_Flash+0xe>
  fa:	00 00       	nop
	_delay_ms(250);
}
  fc:	08 95       	ret

000000fe <LED_InitPort>:

void LED_InitPort(uint8_t port)
{
  fe:	cf 93       	push	r28
 100:	c8 2f       	mov	r28, r24
	DIO_set_port_dir(port,PORT_OUT);
 102:	6f ef       	ldi	r22, 0xFF	; 255
 104:	0e 94 bb 03 	call	0x776	; 0x776 <DIO_set_port_dir>
	DIO_write_port(port,PORT_LOW);
 108:	8c 2f       	mov	r24, r28
 10a:	60 e0       	ldi	r22, 0x00	; 0
 10c:	0e 94 da 03 	call	0x7b4	; 0x7b4 <DIO_write_port>
}
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <LED_FlashPort>:

void LED_FlashPort(uint8_t port,uint32_t delay)
{
	DIO_toggle_port(port);
 114:	0e 94 1a 04 	call	0x834	; 0x834 <DIO_toggle_port>
 118:	8f e3       	ldi	r24, 0x3F	; 63
 11a:	9d e0       	ldi	r25, 0x0D	; 13
 11c:	a3 e0       	ldi	r26, 0x03	; 3
 11e:	81 50       	subi	r24, 0x01	; 1
 120:	90 40       	sbci	r25, 0x00	; 0
 122:	a0 40       	sbci	r26, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <LED_FlashPort+0xa>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LED_FlashPort+0x14>
 128:	00 00       	nop
	_delay_ms(1000);
}
 12a:	08 95       	ret

0000012c <LED_ShiftLeft>:

void LED_ShiftLeft(uint8_t port,uint32_t delay)
{
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	d8 2f       	mov	r29, r24
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 132:	c0 e0       	ldi	r28, 0x00	; 0
	{
		DIO_write_pin(port,pin_num-1,LOW);
 134:	6c 2f       	mov	r22, r28
 136:	61 50       	subi	r22, 0x01	; 1
 138:	8d 2f       	mov	r24, r29
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 140:	8d 2f       	mov	r24, r29
 142:	6c 2f       	mov	r22, r28
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 14a:	83 e2       	ldi	r24, 0x23	; 35
 14c:	94 ef       	ldi	r25, 0xF4	; 244
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <LED_ShiftLeft+0x22>
 152:	00 c0       	rjmp	.+0      	; 0x154 <LED_ShiftLeft+0x28>
 154:	00 00       	nop
}

void LED_ShiftLeft(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 156:	cf 5f       	subi	r28, 0xFF	; 255
 158:	c8 30       	cpi	r28, 0x08	; 8
 15a:	61 f7       	brne	.-40     	; 0x134 <LED_ShiftLeft+0x8>
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,7,LOW);
 15c:	8d 2f       	mov	r24, r29
 15e:	67 e0       	ldi	r22, 0x07	; 7
 160:	40 e0       	ldi	r20, 0x00	; 0
 162:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <LED_ShiftRight>:

void LED_ShiftRight(uint8_t port,uint32_t delay)
{
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	d8 2f       	mov	r29, r24
	int8_t pin_num;
	for (pin_num = 7;pin_num >= 0; pin_num-- )
 172:	c7 e0       	ldi	r28, 0x07	; 7
		_delay_ms(250);
	}
	DIO_write_pin(port,7,LOW);
}

void LED_ShiftRight(uint8_t port,uint32_t delay)
 174:	6c 2f       	mov	r22, r28
 176:	6f 5f       	subi	r22, 0xFF	; 255
{
	int8_t pin_num;
	for (pin_num = 7;pin_num >= 0; pin_num-- )
	{
		DIO_write_pin(port,pin_num+1,LOW);
 178:	8d 2f       	mov	r24, r29
 17a:	40 e0       	ldi	r20, 0x00	; 0
 17c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 180:	8d 2f       	mov	r24, r29
 182:	6c 2f       	mov	r22, r28
 184:	41 e0       	ldi	r20, 0x01	; 1
 186:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 18a:	83 e2       	ldi	r24, 0x23	; 35
 18c:	94 ef       	ldi	r25, 0xF4	; 244
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <LED_ShiftRight+0x22>
 192:	00 c0       	rjmp	.+0      	; 0x194 <LED_ShiftRight+0x28>
 194:	00 00       	nop
}

void LED_ShiftRight(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 7;pin_num >= 0; pin_num-- )
 196:	c1 50       	subi	r28, 0x01	; 1
 198:	68 f7       	brcc	.-38     	; 0x174 <LED_ShiftRight+0x8>
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,0,LOW);
 19a:	8d 2f       	mov	r24, r29
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	08 95       	ret

000001aa <LED_Converge>:

void LED_Converge(uint8_t port,uint32_t delay)
{
 1aa:	0f 93       	push	r16
 1ac:	1f 93       	push	r17
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	d8 2f       	mov	r29, r24
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 1b4:	c0 e0       	ldi	r28, 0x00	; 0
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
 1b6:	08 e0       	ldi	r16, 0x08	; 8
		DIO_write_pin(port,7-pin_num,HIGH);
 1b8:	17 e0       	ldi	r17, 0x07	; 7
void LED_Converge(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
 1ba:	6c 2f       	mov	r22, r28
 1bc:	61 50       	subi	r22, 0x01	; 1
 1be:	8d 2f       	mov	r24, r29
 1c0:	40 e0       	ldi	r20, 0x00	; 0
 1c2:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 1c6:	8d 2f       	mov	r24, r29
 1c8:	6c 2f       	mov	r22, r28
 1ca:	41 e0       	ldi	r20, 0x01	; 1
 1cc:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,8-pin_num,LOW);
 1d0:	60 2f       	mov	r22, r16
 1d2:	6c 1b       	sub	r22, r28
 1d4:	8d 2f       	mov	r24, r29
 1d6:	40 e0       	ldi	r20, 0x00	; 0
 1d8:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,7-pin_num,HIGH);
 1dc:	61 2f       	mov	r22, r17
 1de:	6c 1b       	sub	r22, r28
 1e0:	8d 2f       	mov	r24, r29
 1e2:	41 e0       	ldi	r20, 0x01	; 1
 1e4:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 1e8:	83 e2       	ldi	r24, 0x23	; 35
 1ea:	94 ef       	ldi	r25, 0xF4	; 244
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <LED_Converge+0x42>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <LED_Converge+0x48>
 1f2:	00 00       	nop
}

void LED_Converge(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 1f4:	cf 5f       	subi	r28, 0xFF	; 255
 1f6:	c4 30       	cpi	r28, 0x04	; 4
 1f8:	01 f7       	brne	.-64     	; 0x1ba <LED_Converge+0x10>
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,3,LOW);
 1fa:	8d 2f       	mov	r24, r29
 1fc:	63 e0       	ldi	r22, 0x03	; 3
 1fe:	40 e0       	ldi	r20, 0x00	; 0
 200:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	DIO_write_pin(port,4,LOW);
 204:	8d 2f       	mov	r24, r29
 206:	64 e0       	ldi	r22, 0x04	; 4
 208:	40 e0       	ldi	r20, 0x00	; 0
 20a:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	1f 91       	pop	r17
 214:	0f 91       	pop	r16
 216:	08 95       	ret

00000218 <LED_Diverge>:

void LED_Diverge(uint8_t port,uint32_t delay)
{
 218:	0f 93       	push	r16
 21a:	1f 93       	push	r17
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
 220:	d8 2f       	mov	r29, r24
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
 222:	c3 e0       	ldi	r28, 0x03	; 3
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,4,LOW);
}

void LED_Diverge(uint8_t port,uint32_t delay)
 224:	06 e0       	ldi	r16, 0x06	; 6
 226:	17 e0       	ldi	r17, 0x07	; 7
 228:	6c 2f       	mov	r22, r28
 22a:	6f 5f       	subi	r22, 0xFF	; 255
{
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
 22c:	8d 2f       	mov	r24, r29
 22e:	40 e0       	ldi	r20, 0x00	; 0
 230:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,4,LOW);
}

void LED_Diverge(uint8_t port,uint32_t delay)
 234:	60 2f       	mov	r22, r16
 236:	6c 1b       	sub	r22, r28
{
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
 238:	8d 2f       	mov	r24, r29
 23a:	40 e0       	ldi	r20, 0x00	; 0
 23c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 240:	8d 2f       	mov	r24, r29
 242:	6c 2f       	mov	r22, r28
 244:	41 e0       	ldi	r20, 0x01	; 1
 246:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,4,LOW);
}

void LED_Diverge(uint8_t port,uint32_t delay)
 24a:	61 2f       	mov	r22, r17
 24c:	6c 1b       	sub	r22, r28
	for (pin_num = 3;pin_num >= 0;pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
 24e:	8d 2f       	mov	r24, r29
 250:	41 e0       	ldi	r20, 0x01	; 1
 252:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 256:	83 e2       	ldi	r24, 0x23	; 35
 258:	94 ef       	ldi	r25, 0xF4	; 244
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <LED_Diverge+0x42>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <LED_Diverge+0x48>
 260:	00 00       	nop
}

void LED_Diverge(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
 262:	c1 50       	subi	r28, 0x01	; 1
 264:	08 f7       	brcc	.-62     	; 0x228 <LED_Diverge+0x10>
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,0,LOW);
 266:	8d 2f       	mov	r24, r29
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	40 e0       	ldi	r20, 0x00	; 0
 26c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	DIO_write_pin(port,7,LOW);
 270:	8d 2f       	mov	r24, r29
 272:	67 e0       	ldi	r22, 0x07	; 7
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	1f 91       	pop	r17
 280:	0f 91       	pop	r16
 282:	08 95       	ret

00000284 <LED_PingPong>:

void LED_PingPong(uint8_t port,uint32_t delay)
{
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	d8 2f       	mov	r29, r24
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 6; pin_num++ )
 28a:	c0 e0       	ldi	r28, 0x00	; 0
	}
	DIO_write_pin(port,0,LOW);
	DIO_write_pin(port,7,LOW);
}

void LED_PingPong(uint8_t port,uint32_t delay)
 28c:	6c 2f       	mov	r22, r28
 28e:	61 50       	subi	r22, 0x01	; 1
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 6; pin_num++ )
	{
		DIO_write_pin(port,pin_num-1,LOW);
 290:	8d 2f       	mov	r24, r29
 292:	40 e0       	ldi	r20, 0x00	; 0
 294:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 298:	8d 2f       	mov	r24, r29
 29a:	6c 2f       	mov	r22, r28
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 2a2:	83 e2       	ldi	r24, 0x23	; 35
 2a4:	94 ef       	ldi	r25, 0xF4	; 244
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <LED_PingPong+0x22>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <LED_PingPong+0x28>
 2ac:	00 00       	nop
}

void LED_PingPong(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 6; pin_num++ )
 2ae:	cf 5f       	subi	r28, 0xFF	; 255
 2b0:	c7 30       	cpi	r28, 0x07	; 7
 2b2:	61 f7       	brne	.-40     	; 0x28c <LED_PingPong+0x8>
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,6,LOW);
 2b4:	8d 2f       	mov	r24, r29
 2b6:	66 e0       	ldi	r22, 0x06	; 6
 2b8:	40 e0       	ldi	r20, 0x00	; 0
 2ba:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	}
	DIO_write_pin(port,0,LOW);
	DIO_write_pin(port,7,LOW);
}

void LED_PingPong(uint8_t port,uint32_t delay)
 2be:	6c 2f       	mov	r22, r28
 2c0:	6f 5f       	subi	r22, 0xFF	; 255
		_delay_ms(250);
	}
	DIO_write_pin(port,6,LOW);
	for (pin_num = 7;pin_num >= 1; pin_num-- )
	{
		DIO_write_pin(port,pin_num+1,LOW);
 2c2:	8d 2f       	mov	r24, r29
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 2ca:	8d 2f       	mov	r24, r29
 2cc:	6c 2f       	mov	r22, r28
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 2d4:	83 e2       	ldi	r24, 0x23	; 35
 2d6:	94 ef       	ldi	r25, 0xF4	; 244
 2d8:	01 97       	sbiw	r24, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <LED_PingPong+0x54>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <LED_PingPong+0x5a>
 2de:	00 00       	nop
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,6,LOW);
	for (pin_num = 7;pin_num >= 1; pin_num-- )
 2e0:	c1 50       	subi	r28, 0x01	; 1
 2e2:	69 f7       	brne	.-38     	; 0x2be <LED_PingPong+0x3a>
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,1,LOW);
 2e4:	8d 2f       	mov	r24, r29
 2e6:	61 e0       	ldi	r22, 0x01	; 1
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
}
 2ee:	df 91       	pop	r29
 2f0:	cf 91       	pop	r28
 2f2:	08 95       	ret

000002f4 <LED_SnakeEffect>:

void LED_SnakeEffect(uint8_t port,uint32_t delay)
{
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	d8 2f       	mov	r29, r24
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 2fa:	c0 e0       	ldi	r28, 0x00	; 0
	{
		DIO_write_pin(port,pin_num,HIGH);
 2fc:	8d 2f       	mov	r24, r29
 2fe:	6c 2f       	mov	r22, r28
 300:	41 e0       	ldi	r20, 0x01	; 1
 302:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 306:	83 e2       	ldi	r24, 0x23	; 35
 308:	94 ef       	ldi	r25, 0xF4	; 244
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <LED_SnakeEffect+0x16>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <LED_SnakeEffect+0x1c>
 310:	00 00       	nop
}

void LED_SnakeEffect(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 312:	cf 5f       	subi	r28, 0xFF	; 255
 314:	c8 30       	cpi	r28, 0x08	; 8
 316:	91 f7       	brne	.-28     	; 0x2fc <LED_SnakeEffect+0x8>
 318:	c0 e0       	ldi	r28, 0x00	; 0
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	for (pin_num = 0;pin_num <= 7; pin_num++ )
	{
		DIO_write_pin(port,pin_num,LOW);
 31a:	8d 2f       	mov	r24, r29
 31c:	6c 2f       	mov	r22, r28
 31e:	40 e0       	ldi	r20, 0x00	; 0
 320:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 324:	83 e2       	ldi	r24, 0x23	; 35
 326:	94 ef       	ldi	r25, 0xF4	; 244
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <LED_SnakeEffect+0x34>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <LED_SnakeEffect+0x3a>
 32e:	00 00       	nop
	for (pin_num = 0;pin_num <= 7; pin_num++ )
	{
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 330:	cf 5f       	subi	r28, 0xFF	; 255
 332:	c8 30       	cpi	r28, 0x08	; 8
 334:	91 f7       	brne	.-28     	; 0x31a <LED_SnakeEffect+0x26>
	{
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}
 336:	df 91       	pop	r29
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <LED_Converge_Diverge>:

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
{
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	c8 2f       	mov	r28, r24
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 346:	d0 e0       	ldi	r29, 0x00	; 0
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 348:	08 e0       	ldi	r16, 0x08	; 8
 34a:	17 e0       	ldi	r17, 0x07	; 7
 34c:	6d 2f       	mov	r22, r29
 34e:	61 50       	subi	r22, 0x01	; 1
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
 350:	8c 2f       	mov	r24, r28
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 358:	8c 2f       	mov	r24, r28
 35a:	6d 2f       	mov	r22, r29
 35c:	41 e0       	ldi	r20, 0x01	; 1
 35e:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 362:	60 2f       	mov	r22, r16
 364:	6d 1b       	sub	r22, r29
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
 366:	8c 2f       	mov	r24, r28
 368:	40 e0       	ldi	r20, 0x00	; 0
 36a:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 36e:	61 2f       	mov	r22, r17
 370:	6d 1b       	sub	r22, r29
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
		DIO_write_pin(port,7-pin_num,HIGH);
 372:	8c 2f       	mov	r24, r28
 374:	41 e0       	ldi	r20, 0x01	; 1
 376:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 37a:	83 e2       	ldi	r24, 0x23	; 35
 37c:	94 ef       	ldi	r25, 0xF4	; 244
 37e:	01 97       	sbiw	r24, 0x01	; 1
 380:	f1 f7       	brne	.-4      	; 0x37e <LED_Converge_Diverge+0x42>
 382:	00 c0       	rjmp	.+0      	; 0x384 <LED_Converge_Diverge+0x48>
 384:	00 00       	nop
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 386:	df 5f       	subi	r29, 0xFF	; 255
 388:	d4 30       	cpi	r29, 0x04	; 4
 38a:	01 f7       	brne	.-64     	; 0x34c <LED_Converge_Diverge+0x10>
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,3,LOW);
 38c:	8c 2f       	mov	r24, r28
 38e:	63 e0       	ldi	r22, 0x03	; 3
 390:	40 e0       	ldi	r20, 0x00	; 0
 392:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	DIO_write_pin(port,3,LOW);
 396:	8c 2f       	mov	r24, r28
 398:	63 e0       	ldi	r22, 0x03	; 3
 39a:	40 e0       	ldi	r20, 0x00	; 0
 39c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	for (pin_num = 3;pin_num >= 0; pin_num--)
 3a0:	d3 e0       	ldi	r29, 0x03	; 3
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 3a2:	06 e0       	ldi	r16, 0x06	; 6
 3a4:	17 e0       	ldi	r17, 0x07	; 7
 3a6:	6d 2f       	mov	r22, r29
 3a8:	6f 5f       	subi	r22, 0xFF	; 255
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,3,LOW);
	for (pin_num = 3;pin_num >= 0; pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
 3aa:	8c 2f       	mov	r24, r28
 3ac:	40 e0       	ldi	r20, 0x00	; 0
 3ae:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 3b2:	60 2f       	mov	r22, r16
 3b4:	6d 1b       	sub	r22, r29
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,3,LOW);
	for (pin_num = 3;pin_num >= 0; pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
 3b6:	8c 2f       	mov	r24, r28
 3b8:	40 e0       	ldi	r20, 0x00	; 0
 3ba:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 3be:	8c 2f       	mov	r24, r28
 3c0:	6d 2f       	mov	r22, r29
 3c2:	41 e0       	ldi	r20, 0x01	; 1
 3c4:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 3c8:	61 2f       	mov	r22, r17
 3ca:	6d 1b       	sub	r22, r29
	for (pin_num = 3;pin_num >= 0; pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
 3cc:	8c 2f       	mov	r24, r28
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 3d4:	83 e2       	ldi	r24, 0x23	; 35
 3d6:	94 ef       	ldi	r25, 0xF4	; 244
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <LED_Converge_Diverge+0x9c>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <LED_Converge_Diverge+0xa2>
 3de:	00 00       	nop
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,3,LOW);
	for (pin_num = 3;pin_num >= 0; pin_num--)
 3e0:	d1 50       	subi	r29, 0x01	; 1
 3e2:	08 f7       	brcc	.-62     	; 0x3a6 <LED_Converge_Diverge+0x6a>
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,0,LOW);
 3e4:	8c 2f       	mov	r24, r28
 3e6:	60 e0       	ldi	r22, 0x00	; 0
 3e8:	40 e0       	ldi	r20, 0x00	; 0
 3ea:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
	DIO_write_pin(port,7,LOW);
 3ee:	8c 2f       	mov	r24, r28
 3f0:	67 e0       	ldi	r22, 0x07	; 7
 3f2:	40 e0       	ldi	r20, 0x00	; 0
 3f4:	0e 94 99 02 	call	0x532	; 0x532 <DIO_write_pin>
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	1f 91       	pop	r17
 3fe:	0f 91       	pop	r16
 400:	08 95       	ret

00000402 <main>:

#include "Application/application.h"

int main(void)
{
	App_init();
 402:	0e 94 49 00 	call	0x92	; 0x92 <App_init>
	
	App_start();
 406:	0e 94 4d 00 	call	0x9a	; 0x9a <App_start>
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	08 95       	ret

00000410 <DIO_set_pin_dir>:
 410:	84 34       	cpi	r24, 0x44	; 68
 412:	09 f4       	brne	.+2      	; 0x416 <DIO_set_pin_dir+0x6>
 414:	71 c0       	rjmp	.+226    	; 0x4f8 <DIO_set_pin_dir+0xe8>
 416:	85 34       	cpi	r24, 0x45	; 69
 418:	48 f4       	brcc	.+18     	; 0x42c <DIO_set_pin_dir+0x1c>
 41a:	82 34       	cpi	r24, 0x42	; 66
 41c:	99 f1       	breq	.+102    	; 0x484 <DIO_set_pin_dir+0x74>
 41e:	83 34       	cpi	r24, 0x43	; 67
 420:	08 f0       	brcs	.+2      	; 0x424 <DIO_set_pin_dir+0x14>
 422:	4d c0       	rjmp	.+154    	; 0x4be <DIO_set_pin_dir+0xae>
 424:	81 34       	cpi	r24, 0x41	; 65
 426:	09 f0       	breq	.+2      	; 0x42a <DIO_set_pin_dir+0x1a>
 428:	83 c0       	rjmp	.+262    	; 0x530 <DIO_set_pin_dir+0x120>
 42a:	0f c0       	rjmp	.+30     	; 0x44a <DIO_set_pin_dir+0x3a>
 42c:	82 36       	cpi	r24, 0x62	; 98
 42e:	51 f1       	breq	.+84     	; 0x484 <DIO_set_pin_dir+0x74>
 430:	83 36       	cpi	r24, 0x63	; 99
 432:	20 f4       	brcc	.+8      	; 0x43c <DIO_set_pin_dir+0x2c>
 434:	81 36       	cpi	r24, 0x61	; 97
 436:	09 f0       	breq	.+2      	; 0x43a <DIO_set_pin_dir+0x2a>
 438:	7b c0       	rjmp	.+246    	; 0x530 <DIO_set_pin_dir+0x120>
 43a:	07 c0       	rjmp	.+14     	; 0x44a <DIO_set_pin_dir+0x3a>
 43c:	83 36       	cpi	r24, 0x63	; 99
 43e:	09 f4       	brne	.+2      	; 0x442 <DIO_set_pin_dir+0x32>
 440:	3e c0       	rjmp	.+124    	; 0x4be <DIO_set_pin_dir+0xae>
 442:	84 36       	cpi	r24, 0x64	; 100
 444:	09 f0       	breq	.+2      	; 0x448 <DIO_set_pin_dir+0x38>
 446:	74 c0       	rjmp	.+232    	; 0x530 <DIO_set_pin_dir+0x120>
 448:	57 c0       	rjmp	.+174    	; 0x4f8 <DIO_set_pin_dir+0xe8>
 44a:	44 23       	and	r20, r20
 44c:	69 f0       	breq	.+26     	; 0x468 <DIO_set_pin_dir+0x58>
 44e:	2a b3       	in	r18, 0x1a	; 26
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	ac 01       	movw	r20, r24
 456:	02 c0       	rjmp	.+4      	; 0x45c <DIO_set_pin_dir+0x4c>
 458:	44 0f       	add	r20, r20
 45a:	55 1f       	adc	r21, r21
 45c:	6a 95       	dec	r22
 45e:	e2 f7       	brpl	.-8      	; 0x458 <DIO_set_pin_dir+0x48>
 460:	ba 01       	movw	r22, r20
 462:	62 2b       	or	r22, r18
 464:	6a bb       	out	0x1a, r22	; 26
 466:	08 95       	ret
 468:	2a b3       	in	r18, 0x1a	; 26
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	ac 01       	movw	r20, r24
 470:	02 c0       	rjmp	.+4      	; 0x476 <DIO_set_pin_dir+0x66>
 472:	44 0f       	add	r20, r20
 474:	55 1f       	adc	r21, r21
 476:	6a 95       	dec	r22
 478:	e2 f7       	brpl	.-8      	; 0x472 <DIO_set_pin_dir+0x62>
 47a:	ba 01       	movw	r22, r20
 47c:	60 95       	com	r22
 47e:	62 23       	and	r22, r18
 480:	6a bb       	out	0x1a, r22	; 26
 482:	08 95       	ret
 484:	44 23       	and	r20, r20
 486:	69 f0       	breq	.+26     	; 0x4a2 <DIO_set_pin_dir+0x92>
 488:	27 b3       	in	r18, 0x17	; 23
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	ac 01       	movw	r20, r24
 490:	02 c0       	rjmp	.+4      	; 0x496 <DIO_set_pin_dir+0x86>
 492:	44 0f       	add	r20, r20
 494:	55 1f       	adc	r21, r21
 496:	6a 95       	dec	r22
 498:	e2 f7       	brpl	.-8      	; 0x492 <DIO_set_pin_dir+0x82>
 49a:	ba 01       	movw	r22, r20
 49c:	62 2b       	or	r22, r18
 49e:	67 bb       	out	0x17, r22	; 23
 4a0:	08 95       	ret
 4a2:	27 b3       	in	r18, 0x17	; 23
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	ac 01       	movw	r20, r24
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <DIO_set_pin_dir+0xa0>
 4ac:	44 0f       	add	r20, r20
 4ae:	55 1f       	adc	r21, r21
 4b0:	6a 95       	dec	r22
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <DIO_set_pin_dir+0x9c>
 4b4:	ba 01       	movw	r22, r20
 4b6:	60 95       	com	r22
 4b8:	62 23       	and	r22, r18
 4ba:	67 bb       	out	0x17, r22	; 23
 4bc:	08 95       	ret
 4be:	44 23       	and	r20, r20
 4c0:	69 f0       	breq	.+26     	; 0x4dc <DIO_set_pin_dir+0xcc>
 4c2:	24 b3       	in	r18, 0x14	; 20
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	ac 01       	movw	r20, r24
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <DIO_set_pin_dir+0xc0>
 4cc:	44 0f       	add	r20, r20
 4ce:	55 1f       	adc	r21, r21
 4d0:	6a 95       	dec	r22
 4d2:	e2 f7       	brpl	.-8      	; 0x4cc <DIO_set_pin_dir+0xbc>
 4d4:	ba 01       	movw	r22, r20
 4d6:	62 2b       	or	r22, r18
 4d8:	64 bb       	out	0x14, r22	; 20
 4da:	08 95       	ret
 4dc:	24 b3       	in	r18, 0x14	; 20
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	ac 01       	movw	r20, r24
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <DIO_set_pin_dir+0xda>
 4e6:	44 0f       	add	r20, r20
 4e8:	55 1f       	adc	r21, r21
 4ea:	6a 95       	dec	r22
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <DIO_set_pin_dir+0xd6>
 4ee:	ba 01       	movw	r22, r20
 4f0:	60 95       	com	r22
 4f2:	62 23       	and	r22, r18
 4f4:	64 bb       	out	0x14, r22	; 20
 4f6:	08 95       	ret
 4f8:	44 23       	and	r20, r20
 4fa:	69 f0       	breq	.+26     	; 0x516 <DIO_set_pin_dir+0x106>
 4fc:	21 b3       	in	r18, 0x11	; 17
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	ac 01       	movw	r20, r24
 504:	02 c0       	rjmp	.+4      	; 0x50a <DIO_set_pin_dir+0xfa>
 506:	44 0f       	add	r20, r20
 508:	55 1f       	adc	r21, r21
 50a:	6a 95       	dec	r22
 50c:	e2 f7       	brpl	.-8      	; 0x506 <DIO_set_pin_dir+0xf6>
 50e:	ba 01       	movw	r22, r20
 510:	62 2b       	or	r22, r18
 512:	61 bb       	out	0x11, r22	; 17
 514:	08 95       	ret
 516:	21 b3       	in	r18, 0x11	; 17
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	ac 01       	movw	r20, r24
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_set_pin_dir+0x114>
 520:	44 0f       	add	r20, r20
 522:	55 1f       	adc	r21, r21
 524:	6a 95       	dec	r22
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_set_pin_dir+0x110>
 528:	ba 01       	movw	r22, r20
 52a:	60 95       	com	r22
 52c:	62 23       	and	r22, r18
 52e:	61 bb       	out	0x11, r22	; 17
 530:	08 95       	ret

00000532 <DIO_write_pin>:
 532:	84 34       	cpi	r24, 0x44	; 68
 534:	09 f4       	brne	.+2      	; 0x538 <DIO_write_pin+0x6>
 536:	71 c0       	rjmp	.+226    	; 0x61a <DIO_write_pin+0xe8>
 538:	85 34       	cpi	r24, 0x45	; 69
 53a:	48 f4       	brcc	.+18     	; 0x54e <DIO_write_pin+0x1c>
 53c:	82 34       	cpi	r24, 0x42	; 66
 53e:	99 f1       	breq	.+102    	; 0x5a6 <DIO_write_pin+0x74>
 540:	83 34       	cpi	r24, 0x43	; 67
 542:	08 f0       	brcs	.+2      	; 0x546 <DIO_write_pin+0x14>
 544:	4d c0       	rjmp	.+154    	; 0x5e0 <DIO_write_pin+0xae>
 546:	81 34       	cpi	r24, 0x41	; 65
 548:	09 f0       	breq	.+2      	; 0x54c <DIO_write_pin+0x1a>
 54a:	83 c0       	rjmp	.+262    	; 0x652 <DIO_write_pin+0x120>
 54c:	0f c0       	rjmp	.+30     	; 0x56c <DIO_write_pin+0x3a>
 54e:	82 36       	cpi	r24, 0x62	; 98
 550:	51 f1       	breq	.+84     	; 0x5a6 <DIO_write_pin+0x74>
 552:	83 36       	cpi	r24, 0x63	; 99
 554:	20 f4       	brcc	.+8      	; 0x55e <DIO_write_pin+0x2c>
 556:	81 36       	cpi	r24, 0x61	; 97
 558:	09 f0       	breq	.+2      	; 0x55c <DIO_write_pin+0x2a>
 55a:	7b c0       	rjmp	.+246    	; 0x652 <DIO_write_pin+0x120>
 55c:	07 c0       	rjmp	.+14     	; 0x56c <DIO_write_pin+0x3a>
 55e:	83 36       	cpi	r24, 0x63	; 99
 560:	09 f4       	brne	.+2      	; 0x564 <DIO_write_pin+0x32>
 562:	3e c0       	rjmp	.+124    	; 0x5e0 <DIO_write_pin+0xae>
 564:	84 36       	cpi	r24, 0x64	; 100
 566:	09 f0       	breq	.+2      	; 0x56a <DIO_write_pin+0x38>
 568:	74 c0       	rjmp	.+232    	; 0x652 <DIO_write_pin+0x120>
 56a:	57 c0       	rjmp	.+174    	; 0x61a <DIO_write_pin+0xe8>
 56c:	44 23       	and	r20, r20
 56e:	69 f0       	breq	.+26     	; 0x58a <DIO_write_pin+0x58>
 570:	2b b3       	in	r18, 0x1b	; 27
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	ac 01       	movw	r20, r24
 578:	02 c0       	rjmp	.+4      	; 0x57e <DIO_write_pin+0x4c>
 57a:	44 0f       	add	r20, r20
 57c:	55 1f       	adc	r21, r21
 57e:	6a 95       	dec	r22
 580:	e2 f7       	brpl	.-8      	; 0x57a <DIO_write_pin+0x48>
 582:	ba 01       	movw	r22, r20
 584:	62 2b       	or	r22, r18
 586:	6b bb       	out	0x1b, r22	; 27
 588:	08 95       	ret
 58a:	2b b3       	in	r18, 0x1b	; 27
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	ac 01       	movw	r20, r24
 592:	02 c0       	rjmp	.+4      	; 0x598 <DIO_write_pin+0x66>
 594:	44 0f       	add	r20, r20
 596:	55 1f       	adc	r21, r21
 598:	6a 95       	dec	r22
 59a:	e2 f7       	brpl	.-8      	; 0x594 <DIO_write_pin+0x62>
 59c:	ba 01       	movw	r22, r20
 59e:	60 95       	com	r22
 5a0:	62 23       	and	r22, r18
 5a2:	6b bb       	out	0x1b, r22	; 27
 5a4:	08 95       	ret
 5a6:	44 23       	and	r20, r20
 5a8:	69 f0       	breq	.+26     	; 0x5c4 <DIO_write_pin+0x92>
 5aa:	28 b3       	in	r18, 0x18	; 24
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	ac 01       	movw	r20, r24
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <DIO_write_pin+0x86>
 5b4:	44 0f       	add	r20, r20
 5b6:	55 1f       	adc	r21, r21
 5b8:	6a 95       	dec	r22
 5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <DIO_write_pin+0x82>
 5bc:	ba 01       	movw	r22, r20
 5be:	62 2b       	or	r22, r18
 5c0:	68 bb       	out	0x18, r22	; 24
 5c2:	08 95       	ret
 5c4:	28 b3       	in	r18, 0x18	; 24
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	ac 01       	movw	r20, r24
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <DIO_write_pin+0xa0>
 5ce:	44 0f       	add	r20, r20
 5d0:	55 1f       	adc	r21, r21
 5d2:	6a 95       	dec	r22
 5d4:	e2 f7       	brpl	.-8      	; 0x5ce <DIO_write_pin+0x9c>
 5d6:	ba 01       	movw	r22, r20
 5d8:	60 95       	com	r22
 5da:	62 23       	and	r22, r18
 5dc:	68 bb       	out	0x18, r22	; 24
 5de:	08 95       	ret
 5e0:	44 23       	and	r20, r20
 5e2:	69 f0       	breq	.+26     	; 0x5fe <DIO_write_pin+0xcc>
 5e4:	25 b3       	in	r18, 0x15	; 21
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	ac 01       	movw	r20, r24
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <DIO_write_pin+0xc0>
 5ee:	44 0f       	add	r20, r20
 5f0:	55 1f       	adc	r21, r21
 5f2:	6a 95       	dec	r22
 5f4:	e2 f7       	brpl	.-8      	; 0x5ee <DIO_write_pin+0xbc>
 5f6:	ba 01       	movw	r22, r20
 5f8:	62 2b       	or	r22, r18
 5fa:	65 bb       	out	0x15, r22	; 21
 5fc:	08 95       	ret
 5fe:	25 b3       	in	r18, 0x15	; 21
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	ac 01       	movw	r20, r24
 606:	02 c0       	rjmp	.+4      	; 0x60c <DIO_write_pin+0xda>
 608:	44 0f       	add	r20, r20
 60a:	55 1f       	adc	r21, r21
 60c:	6a 95       	dec	r22
 60e:	e2 f7       	brpl	.-8      	; 0x608 <DIO_write_pin+0xd6>
 610:	ba 01       	movw	r22, r20
 612:	60 95       	com	r22
 614:	62 23       	and	r22, r18
 616:	65 bb       	out	0x15, r22	; 21
 618:	08 95       	ret
 61a:	44 23       	and	r20, r20
 61c:	69 f0       	breq	.+26     	; 0x638 <DIO_write_pin+0x106>
 61e:	22 b3       	in	r18, 0x12	; 18
 620:	81 e0       	ldi	r24, 0x01	; 1
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	ac 01       	movw	r20, r24
 626:	02 c0       	rjmp	.+4      	; 0x62c <DIO_write_pin+0xfa>
 628:	44 0f       	add	r20, r20
 62a:	55 1f       	adc	r21, r21
 62c:	6a 95       	dec	r22
 62e:	e2 f7       	brpl	.-8      	; 0x628 <DIO_write_pin+0xf6>
 630:	ba 01       	movw	r22, r20
 632:	62 2b       	or	r22, r18
 634:	62 bb       	out	0x12, r22	; 18
 636:	08 95       	ret
 638:	22 b3       	in	r18, 0x12	; 18
 63a:	81 e0       	ldi	r24, 0x01	; 1
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	ac 01       	movw	r20, r24
 640:	02 c0       	rjmp	.+4      	; 0x646 <DIO_write_pin+0x114>
 642:	44 0f       	add	r20, r20
 644:	55 1f       	adc	r21, r21
 646:	6a 95       	dec	r22
 648:	e2 f7       	brpl	.-8      	; 0x642 <DIO_write_pin+0x110>
 64a:	ba 01       	movw	r22, r20
 64c:	60 95       	com	r22
 64e:	62 23       	and	r22, r18
 650:	62 bb       	out	0x12, r22	; 18
 652:	08 95       	ret

00000654 <DIO_toggle_pin>:
 654:	84 34       	cpi	r24, 0x44	; 68
 656:	09 f4       	brne	.+2      	; 0x65a <DIO_toggle_pin+0x6>
 658:	3d c0       	rjmp	.+122    	; 0x6d4 <DIO_toggle_pin+0x80>
 65a:	85 34       	cpi	r24, 0x45	; 69
 65c:	40 f4       	brcc	.+16     	; 0x66e <DIO_toggle_pin+0x1a>
 65e:	82 34       	cpi	r24, 0x42	; 66
 660:	f9 f0       	breq	.+62     	; 0x6a0 <DIO_toggle_pin+0x4c>
 662:	83 34       	cpi	r24, 0x43	; 67
 664:	50 f5       	brcc	.+84     	; 0x6ba <DIO_toggle_pin+0x66>
 666:	81 34       	cpi	r24, 0x41	; 65
 668:	09 f0       	breq	.+2      	; 0x66c <DIO_toggle_pin+0x18>
 66a:	40 c0       	rjmp	.+128    	; 0x6ec <DIO_toggle_pin+0x98>
 66c:	0c c0       	rjmp	.+24     	; 0x686 <DIO_toggle_pin+0x32>
 66e:	82 36       	cpi	r24, 0x62	; 98
 670:	b9 f0       	breq	.+46     	; 0x6a0 <DIO_toggle_pin+0x4c>
 672:	83 36       	cpi	r24, 0x63	; 99
 674:	18 f4       	brcc	.+6      	; 0x67c <DIO_toggle_pin+0x28>
 676:	81 36       	cpi	r24, 0x61	; 97
 678:	c9 f5       	brne	.+114    	; 0x6ec <DIO_toggle_pin+0x98>
 67a:	05 c0       	rjmp	.+10     	; 0x686 <DIO_toggle_pin+0x32>
 67c:	83 36       	cpi	r24, 0x63	; 99
 67e:	e9 f0       	breq	.+58     	; 0x6ba <DIO_toggle_pin+0x66>
 680:	84 36       	cpi	r24, 0x64	; 100
 682:	a1 f5       	brne	.+104    	; 0x6ec <DIO_toggle_pin+0x98>
 684:	27 c0       	rjmp	.+78     	; 0x6d4 <DIO_toggle_pin+0x80>
 686:	2b b3       	in	r18, 0x1b	; 27
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	ac 01       	movw	r20, r24
 68e:	02 c0       	rjmp	.+4      	; 0x694 <DIO_toggle_pin+0x40>
 690:	44 0f       	add	r20, r20
 692:	55 1f       	adc	r21, r21
 694:	6a 95       	dec	r22
 696:	e2 f7       	brpl	.-8      	; 0x690 <DIO_toggle_pin+0x3c>
 698:	ba 01       	movw	r22, r20
 69a:	62 27       	eor	r22, r18
 69c:	6b bb       	out	0x1b, r22	; 27
 69e:	08 95       	ret
 6a0:	28 b3       	in	r18, 0x18	; 24
 6a2:	81 e0       	ldi	r24, 0x01	; 1
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	ac 01       	movw	r20, r24
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <DIO_toggle_pin+0x5a>
 6aa:	44 0f       	add	r20, r20
 6ac:	55 1f       	adc	r21, r21
 6ae:	6a 95       	dec	r22
 6b0:	e2 f7       	brpl	.-8      	; 0x6aa <DIO_toggle_pin+0x56>
 6b2:	ba 01       	movw	r22, r20
 6b4:	62 27       	eor	r22, r18
 6b6:	68 bb       	out	0x18, r22	; 24
 6b8:	08 95       	ret
 6ba:	25 b3       	in	r18, 0x15	; 21
 6bc:	81 e0       	ldi	r24, 0x01	; 1
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	ac 01       	movw	r20, r24
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <DIO_toggle_pin+0x74>
 6c4:	44 0f       	add	r20, r20
 6c6:	55 1f       	adc	r21, r21
 6c8:	6a 95       	dec	r22
 6ca:	e2 f7       	brpl	.-8      	; 0x6c4 <DIO_toggle_pin+0x70>
 6cc:	ba 01       	movw	r22, r20
 6ce:	62 27       	eor	r22, r18
 6d0:	65 bb       	out	0x15, r22	; 21
 6d2:	08 95       	ret
 6d4:	22 b3       	in	r18, 0x12	; 18
 6d6:	81 e0       	ldi	r24, 0x01	; 1
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	ac 01       	movw	r20, r24
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <DIO_toggle_pin+0x8e>
 6de:	44 0f       	add	r20, r20
 6e0:	55 1f       	adc	r21, r21
 6e2:	6a 95       	dec	r22
 6e4:	e2 f7       	brpl	.-8      	; 0x6de <DIO_toggle_pin+0x8a>
 6e6:	ba 01       	movw	r22, r20
 6e8:	62 27       	eor	r22, r18
 6ea:	62 bb       	out	0x12, r22	; 18
 6ec:	08 95       	ret

000006ee <DIO_u8read_pin>:
 6ee:	84 34       	cpi	r24, 0x44	; 68
 6f0:	b1 f1       	breq	.+108    	; 0x75e <DIO_u8read_pin+0x70>
 6f2:	85 34       	cpi	r24, 0x45	; 69
 6f4:	38 f4       	brcc	.+14     	; 0x704 <DIO_u8read_pin+0x16>
 6f6:	82 34       	cpi	r24, 0x42	; 66
 6f8:	e1 f0       	breq	.+56     	; 0x732 <DIO_u8read_pin+0x44>
 6fa:	83 34       	cpi	r24, 0x43	; 67
 6fc:	28 f5       	brcc	.+74     	; 0x748 <DIO_u8read_pin+0x5a>
 6fe:	81 34       	cpi	r24, 0x41	; 65
 700:	c1 f5       	brne	.+112    	; 0x772 <DIO_u8read_pin+0x84>
 702:	0c c0       	rjmp	.+24     	; 0x71c <DIO_u8read_pin+0x2e>
 704:	82 36       	cpi	r24, 0x62	; 98
 706:	a9 f0       	breq	.+42     	; 0x732 <DIO_u8read_pin+0x44>
 708:	83 36       	cpi	r24, 0x63	; 99
 70a:	18 f4       	brcc	.+6      	; 0x712 <DIO_u8read_pin+0x24>
 70c:	81 36       	cpi	r24, 0x61	; 97
 70e:	89 f5       	brne	.+98     	; 0x772 <DIO_u8read_pin+0x84>
 710:	05 c0       	rjmp	.+10     	; 0x71c <DIO_u8read_pin+0x2e>
 712:	83 36       	cpi	r24, 0x63	; 99
 714:	c9 f0       	breq	.+50     	; 0x748 <DIO_u8read_pin+0x5a>
 716:	84 36       	cpi	r24, 0x64	; 100
 718:	61 f5       	brne	.+88     	; 0x772 <DIO_u8read_pin+0x84>
 71a:	21 c0       	rjmp	.+66     	; 0x75e <DIO_u8read_pin+0x70>
 71c:	29 b3       	in	r18, 0x19	; 25
 71e:	30 e0       	ldi	r19, 0x00	; 0
 720:	c9 01       	movw	r24, r18
 722:	02 c0       	rjmp	.+4      	; 0x728 <DIO_u8read_pin+0x3a>
 724:	95 95       	asr	r25
 726:	87 95       	ror	r24
 728:	6a 95       	dec	r22
 72a:	e2 f7       	brpl	.-8      	; 0x724 <DIO_u8read_pin+0x36>
 72c:	98 2f       	mov	r25, r24
 72e:	91 70       	andi	r25, 0x01	; 1
 730:	20 c0       	rjmp	.+64     	; 0x772 <DIO_u8read_pin+0x84>
 732:	26 b3       	in	r18, 0x16	; 22
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	c9 01       	movw	r24, r18
 738:	02 c0       	rjmp	.+4      	; 0x73e <DIO_u8read_pin+0x50>
 73a:	95 95       	asr	r25
 73c:	87 95       	ror	r24
 73e:	6a 95       	dec	r22
 740:	e2 f7       	brpl	.-8      	; 0x73a <DIO_u8read_pin+0x4c>
 742:	98 2f       	mov	r25, r24
 744:	91 70       	andi	r25, 0x01	; 1
 746:	15 c0       	rjmp	.+42     	; 0x772 <DIO_u8read_pin+0x84>
 748:	23 b3       	in	r18, 0x13	; 19
 74a:	30 e0       	ldi	r19, 0x00	; 0
 74c:	c9 01       	movw	r24, r18
 74e:	02 c0       	rjmp	.+4      	; 0x754 <DIO_u8read_pin+0x66>
 750:	95 95       	asr	r25
 752:	87 95       	ror	r24
 754:	6a 95       	dec	r22
 756:	e2 f7       	brpl	.-8      	; 0x750 <DIO_u8read_pin+0x62>
 758:	98 2f       	mov	r25, r24
 75a:	91 70       	andi	r25, 0x01	; 1
 75c:	0a c0       	rjmp	.+20     	; 0x772 <DIO_u8read_pin+0x84>
 75e:	20 b3       	in	r18, 0x10	; 16
 760:	30 e0       	ldi	r19, 0x00	; 0
 762:	c9 01       	movw	r24, r18
 764:	02 c0       	rjmp	.+4      	; 0x76a <DIO_u8read_pin+0x7c>
 766:	95 95       	asr	r25
 768:	87 95       	ror	r24
 76a:	6a 95       	dec	r22
 76c:	e2 f7       	brpl	.-8      	; 0x766 <DIO_u8read_pin+0x78>
 76e:	98 2f       	mov	r25, r24
 770:	91 70       	andi	r25, 0x01	; 1
 772:	89 2f       	mov	r24, r25
 774:	08 95       	ret

00000776 <DIO_set_port_dir>:
 776:	84 34       	cpi	r24, 0x44	; 68
 778:	d9 f0       	breq	.+54     	; 0x7b0 <DIO_set_port_dir+0x3a>
 77a:	85 34       	cpi	r24, 0x45	; 69
 77c:	38 f4       	brcc	.+14     	; 0x78c <DIO_set_port_dir+0x16>
 77e:	82 34       	cpi	r24, 0x42	; 66
 780:	99 f0       	breq	.+38     	; 0x7a8 <DIO_set_port_dir+0x32>
 782:	83 34       	cpi	r24, 0x43	; 67
 784:	98 f4       	brcc	.+38     	; 0x7ac <DIO_set_port_dir+0x36>
 786:	81 34       	cpi	r24, 0x41	; 65
 788:	a1 f4       	brne	.+40     	; 0x7b2 <DIO_set_port_dir+0x3c>
 78a:	0c c0       	rjmp	.+24     	; 0x7a4 <DIO_set_port_dir+0x2e>
 78c:	82 36       	cpi	r24, 0x62	; 98
 78e:	61 f0       	breq	.+24     	; 0x7a8 <DIO_set_port_dir+0x32>
 790:	83 36       	cpi	r24, 0x63	; 99
 792:	18 f4       	brcc	.+6      	; 0x79a <DIO_set_port_dir+0x24>
 794:	81 36       	cpi	r24, 0x61	; 97
 796:	69 f4       	brne	.+26     	; 0x7b2 <DIO_set_port_dir+0x3c>
 798:	05 c0       	rjmp	.+10     	; 0x7a4 <DIO_set_port_dir+0x2e>
 79a:	83 36       	cpi	r24, 0x63	; 99
 79c:	39 f0       	breq	.+14     	; 0x7ac <DIO_set_port_dir+0x36>
 79e:	84 36       	cpi	r24, 0x64	; 100
 7a0:	41 f4       	brne	.+16     	; 0x7b2 <DIO_set_port_dir+0x3c>
 7a2:	06 c0       	rjmp	.+12     	; 0x7b0 <DIO_set_port_dir+0x3a>
 7a4:	6a bb       	out	0x1a, r22	; 26
 7a6:	08 95       	ret
 7a8:	67 bb       	out	0x17, r22	; 23
 7aa:	08 95       	ret
 7ac:	64 bb       	out	0x14, r22	; 20
 7ae:	08 95       	ret
 7b0:	61 bb       	out	0x11, r22	; 17
 7b2:	08 95       	ret

000007b4 <DIO_write_port>:
 7b4:	84 34       	cpi	r24, 0x44	; 68
 7b6:	d9 f0       	breq	.+54     	; 0x7ee <DIO_write_port+0x3a>
 7b8:	85 34       	cpi	r24, 0x45	; 69
 7ba:	38 f4       	brcc	.+14     	; 0x7ca <DIO_write_port+0x16>
 7bc:	82 34       	cpi	r24, 0x42	; 66
 7be:	99 f0       	breq	.+38     	; 0x7e6 <DIO_write_port+0x32>
 7c0:	83 34       	cpi	r24, 0x43	; 67
 7c2:	98 f4       	brcc	.+38     	; 0x7ea <DIO_write_port+0x36>
 7c4:	81 34       	cpi	r24, 0x41	; 65
 7c6:	a1 f4       	brne	.+40     	; 0x7f0 <DIO_write_port+0x3c>
 7c8:	0c c0       	rjmp	.+24     	; 0x7e2 <DIO_write_port+0x2e>
 7ca:	82 36       	cpi	r24, 0x62	; 98
 7cc:	61 f0       	breq	.+24     	; 0x7e6 <DIO_write_port+0x32>
 7ce:	83 36       	cpi	r24, 0x63	; 99
 7d0:	18 f4       	brcc	.+6      	; 0x7d8 <DIO_write_port+0x24>
 7d2:	81 36       	cpi	r24, 0x61	; 97
 7d4:	69 f4       	brne	.+26     	; 0x7f0 <DIO_write_port+0x3c>
 7d6:	05 c0       	rjmp	.+10     	; 0x7e2 <DIO_write_port+0x2e>
 7d8:	83 36       	cpi	r24, 0x63	; 99
 7da:	39 f0       	breq	.+14     	; 0x7ea <DIO_write_port+0x36>
 7dc:	84 36       	cpi	r24, 0x64	; 100
 7de:	41 f4       	brne	.+16     	; 0x7f0 <DIO_write_port+0x3c>
 7e0:	06 c0       	rjmp	.+12     	; 0x7ee <DIO_write_port+0x3a>
 7e2:	6b bb       	out	0x1b, r22	; 27
 7e4:	08 95       	ret
 7e6:	68 bb       	out	0x18, r22	; 24
 7e8:	08 95       	ret
 7ea:	68 bb       	out	0x18, r22	; 24
 7ec:	08 95       	ret
 7ee:	62 bb       	out	0x12, r22	; 18
 7f0:	08 95       	ret

000007f2 <DIO_u8read_port>:
 7f2:	84 34       	cpi	r24, 0x44	; 68
 7f4:	d9 f0       	breq	.+54     	; 0x82c <DIO_u8read_port+0x3a>
 7f6:	85 34       	cpi	r24, 0x45	; 69
 7f8:	38 f4       	brcc	.+14     	; 0x808 <DIO_u8read_port+0x16>
 7fa:	82 34       	cpi	r24, 0x42	; 66
 7fc:	99 f0       	breq	.+38     	; 0x824 <DIO_u8read_port+0x32>
 7fe:	83 34       	cpi	r24, 0x43	; 67
 800:	98 f4       	brcc	.+38     	; 0x828 <DIO_u8read_port+0x36>
 802:	81 34       	cpi	r24, 0x41	; 65
 804:	a1 f4       	brne	.+40     	; 0x82e <DIO_u8read_port+0x3c>
 806:	0c c0       	rjmp	.+24     	; 0x820 <DIO_u8read_port+0x2e>
 808:	82 36       	cpi	r24, 0x62	; 98
 80a:	61 f0       	breq	.+24     	; 0x824 <DIO_u8read_port+0x32>
 80c:	83 36       	cpi	r24, 0x63	; 99
 80e:	18 f4       	brcc	.+6      	; 0x816 <DIO_u8read_port+0x24>
 810:	81 36       	cpi	r24, 0x61	; 97
 812:	69 f4       	brne	.+26     	; 0x82e <DIO_u8read_port+0x3c>
 814:	05 c0       	rjmp	.+10     	; 0x820 <DIO_u8read_port+0x2e>
 816:	83 36       	cpi	r24, 0x63	; 99
 818:	39 f0       	breq	.+14     	; 0x828 <DIO_u8read_port+0x36>
 81a:	84 36       	cpi	r24, 0x64	; 100
 81c:	41 f4       	brne	.+16     	; 0x82e <DIO_u8read_port+0x3c>
 81e:	06 c0       	rjmp	.+12     	; 0x82c <DIO_u8read_port+0x3a>
 820:	99 b3       	in	r25, 0x19	; 25
 822:	05 c0       	rjmp	.+10     	; 0x82e <DIO_u8read_port+0x3c>
 824:	96 b3       	in	r25, 0x16	; 22
 826:	03 c0       	rjmp	.+6      	; 0x82e <DIO_u8read_port+0x3c>
 828:	93 b3       	in	r25, 0x13	; 19
 82a:	01 c0       	rjmp	.+2      	; 0x82e <DIO_u8read_port+0x3c>
 82c:	90 b3       	in	r25, 0x10	; 16
 82e:	89 2f       	mov	r24, r25
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	08 95       	ret

00000834 <DIO_toggle_port>:
 834:	84 34       	cpi	r24, 0x44	; 68
 836:	09 f1       	breq	.+66     	; 0x87a <__stack+0x1b>
 838:	85 34       	cpi	r24, 0x45	; 69
 83a:	38 f4       	brcc	.+14     	; 0x84a <DIO_toggle_port+0x16>
 83c:	82 34       	cpi	r24, 0x42	; 66
 83e:	a9 f0       	breq	.+42     	; 0x86a <__stack+0xb>
 840:	83 34       	cpi	r24, 0x43	; 67
 842:	b8 f4       	brcc	.+46     	; 0x872 <__stack+0x13>
 844:	81 34       	cpi	r24, 0x41	; 65
 846:	e1 f4       	brne	.+56     	; 0x880 <__stack+0x21>
 848:	0c c0       	rjmp	.+24     	; 0x862 <__stack+0x3>
 84a:	82 36       	cpi	r24, 0x62	; 98
 84c:	71 f0       	breq	.+28     	; 0x86a <__stack+0xb>
 84e:	83 36       	cpi	r24, 0x63	; 99
 850:	18 f4       	brcc	.+6      	; 0x858 <DIO_toggle_port+0x24>
 852:	81 36       	cpi	r24, 0x61	; 97
 854:	a9 f4       	brne	.+42     	; 0x880 <__stack+0x21>
 856:	05 c0       	rjmp	.+10     	; 0x862 <__stack+0x3>
 858:	83 36       	cpi	r24, 0x63	; 99
 85a:	59 f0       	breq	.+22     	; 0x872 <__stack+0x13>
 85c:	84 36       	cpi	r24, 0x64	; 100
 85e:	81 f4       	brne	.+32     	; 0x880 <__stack+0x21>
 860:	0c c0       	rjmp	.+24     	; 0x87a <__stack+0x1b>
 862:	8b b3       	in	r24, 0x1b	; 27
 864:	80 95       	com	r24
 866:	8b bb       	out	0x1b, r24	; 27
 868:	08 95       	ret
 86a:	88 b3       	in	r24, 0x18	; 24
 86c:	80 95       	com	r24
 86e:	88 bb       	out	0x18, r24	; 24
 870:	08 95       	ret
 872:	85 b3       	in	r24, 0x15	; 21
 874:	80 95       	com	r24
 876:	85 bb       	out	0x15, r24	; 21
 878:	08 95       	ret
 87a:	82 b3       	in	r24, 0x12	; 18
 87c:	80 95       	com	r24
 87e:	82 bb       	out	0x12, r24	; 18
 880:	08 95       	ret

00000882 <_exit>:
 882:	f8 94       	cli

00000884 <__stop_program>:
 884:	ff cf       	rjmp	.-2      	; 0x884 <__stop_program>
