
TEST programe.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000984  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000984  000009f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000009f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000100  00000000  00000000  00001150  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ea1  00000000  00000000  00001250  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000379  00000000  00000000  000020f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000079b  00000000  00000000  0000246a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000294  00000000  00000000  00002c08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000339  00000000  00000000  00002e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009d3  00000000  00000000  000031d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00003ba8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e8       	ldi	r30, 0x84	; 132
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 80 02 	call	0x500	; 0x500 <main>
  8a:	0c 94 c0 04 	jmp	0x980	; 0x980 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <App_init>:
#include "../EUCAL/BUTTON Driver/BUTTON_interface.h"
#include "application.h"

void App_init(void)
{
	LED_InitPort('A');
  92:	81 e4       	ldi	r24, 0x41	; 65
  94:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LED_InitPort>
}
  98:	08 95       	ret

0000009a <App_start>:
void App_start(void)
{
	while(1)
	{
		
		for (uint32_t i = 0; i < 5;i++ )
  9a:	cc 24       	eor	r12, r12
  9c:	dd 24       	eor	r13, r13
  9e:	76 01       	movw	r14, r12
  a0:	c0 e0       	ldi	r28, 0x00	; 0
  a2:	d0 e0       	ldi	r29, 0x00	; 0
  a4:	88 24       	eor	r8, r8
  a6:	99 24       	eor	r9, r9
  a8:	54 01       	movw	r10, r8
  aa:	0c c0       	rjmp	.+24     	; 0xc4 <App_start+0x2a>
		{
			LED_FlashPort('A',1000);
  ac:	81 e4       	ldi	r24, 0x41	; 65
  ae:	48 ee       	ldi	r20, 0xE8	; 232
  b0:	53 e0       	ldi	r21, 0x03	; 3
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	0e 94 09 01 	call	0x212	; 0x212 <LED_FlashPort>
void App_start(void)
{
	while(1)
	{
		
		for (uint32_t i = 0; i < 5;i++ )
  ba:	08 94       	sec
  bc:	c1 1c       	adc	r12, r1
  be:	d1 1c       	adc	r13, r1
  c0:	e1 1c       	adc	r14, r1
  c2:	f1 1c       	adc	r15, r1
  c4:	85 e0       	ldi	r24, 0x05	; 5
  c6:	c8 16       	cp	r12, r24
  c8:	d1 04       	cpc	r13, r1
  ca:	e1 04       	cpc	r14, r1
  cc:	f1 04       	cpc	r15, r1
  ce:	70 f3       	brcs	.-36     	; 0xac <App_start+0x12>
  d0:	6e 01       	movw	r12, r28
			LED_FlashPort('A',1000);
		}
		
		for (uint32_t i = 0; i <5;i++ )
		{
			LED_ShiftLeft('A',250);
  d2:	81 e4       	ldi	r24, 0x41	; 65
  d4:	4a ef       	ldi	r20, 0xFA	; 250
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	0e 94 15 01 	call	0x22a	; 0x22a <LED_ShiftLeft>
  e0:	08 94       	sec
  e2:	c1 1c       	adc	r12, r1
  e4:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_FlashPort('A',1000);
		}
		
		for (uint32_t i = 0; i <5;i++ )
  e6:	85 e0       	ldi	r24, 0x05	; 5
  e8:	c8 16       	cp	r12, r24
  ea:	d1 04       	cpc	r13, r1
  ec:	91 f7       	brne	.-28     	; 0xd2 <App_start+0x38>
  ee:	6e 01       	movw	r12, r28
			LED_ShiftLeft('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_ShiftRight('A',250);
  f0:	81 e4       	ldi	r24, 0x41	; 65
  f2:	4a ef       	ldi	r20, 0xFA	; 250
  f4:	50 e0       	ldi	r21, 0x00	; 0
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	0e 94 35 01 	call	0x26a	; 0x26a <LED_ShiftRight>
  fe:	08 94       	sec
 100:	c1 1c       	adc	r12, r1
 102:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i <5;i++ )
		{
			LED_ShiftLeft('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
 104:	85 e0       	ldi	r24, 0x05	; 5
 106:	c8 16       	cp	r12, r24
 108:	d1 04       	cpc	r13, r1
 10a:	91 f7       	brne	.-28     	; 0xf0 <App_start+0x56>
 10c:	6e 01       	movw	r12, r28
			LED_ShiftRight('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_Converge('A',250);
 10e:	81 e4       	ldi	r24, 0x41	; 65
 110:	4a ef       	ldi	r20, 0xFA	; 250
 112:	50 e0       	ldi	r21, 0x00	; 0
 114:	60 e0       	ldi	r22, 0x00	; 0
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	0e 94 54 01 	call	0x2a8	; 0x2a8 <LED_Converge>
 11c:	08 94       	sec
 11e:	c1 1c       	adc	r12, r1
 120:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_ShiftRight('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
 122:	85 e0       	ldi	r24, 0x05	; 5
 124:	c8 16       	cp	r12, r24
 126:	d1 04       	cpc	r13, r1
 128:	91 f7       	brne	.-28     	; 0x10e <App_start+0x74>
 12a:	6e 01       	movw	r12, r28
			LED_Converge('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_Diverge('A',250);
 12c:	81 e4       	ldi	r24, 0x41	; 65
 12e:	4a ef       	ldi	r20, 0xFA	; 250
 130:	50 e0       	ldi	r21, 0x00	; 0
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	70 e0       	ldi	r23, 0x00	; 0
 136:	0e 94 8b 01 	call	0x316	; 0x316 <LED_Diverge>
 13a:	08 94       	sec
 13c:	c1 1c       	adc	r12, r1
 13e:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_Converge('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
 140:	85 e0       	ldi	r24, 0x05	; 5
 142:	c8 16       	cp	r12, r24
 144:	d1 04       	cpc	r13, r1
 146:	91 f7       	brne	.-28     	; 0x12c <App_start+0x92>
 148:	6e 01       	movw	r12, r28
			LED_Diverge('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_PingPong('A',250);
 14a:	81 e4       	ldi	r24, 0x41	; 65
 14c:	4a ef       	ldi	r20, 0xFA	; 250
 14e:	50 e0       	ldi	r21, 0x00	; 0
 150:	60 e0       	ldi	r22, 0x00	; 0
 152:	70 e0       	ldi	r23, 0x00	; 0
 154:	0e 94 c1 01 	call	0x382	; 0x382 <LED_PingPong>
 158:	08 94       	sec
 15a:	c1 1c       	adc	r12, r1
 15c:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_Diverge('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
 15e:	85 e0       	ldi	r24, 0x05	; 5
 160:	c8 16       	cp	r12, r24
 162:	d1 04       	cpc	r13, r1
 164:	91 f7       	brne	.-28     	; 0x14a <App_start+0xb0>
 166:	6e 01       	movw	r12, r28
			LED_PingPong('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_SnakeEffect('A',250);
 168:	81 e4       	ldi	r24, 0x41	; 65
 16a:	4a ef       	ldi	r20, 0xFA	; 250
 16c:	50 e0       	ldi	r21, 0x00	; 0
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <LED_SnakeEffect>
 176:	08 94       	sec
 178:	c1 1c       	adc	r12, r1
 17a:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_PingPong('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
 17c:	85 e0       	ldi	r24, 0x05	; 5
 17e:	c8 16       	cp	r12, r24
 180:	d1 04       	cpc	r13, r1
 182:	91 f7       	brne	.-28     	; 0x168 <App_start+0xce>
 184:	6e 01       	movw	r12, r28
			LED_SnakeEffect('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_Converge_Diverge('A',250);
 186:	81 e4       	ldi	r24, 0x41	; 65
 188:	4a ef       	ldi	r20, 0xFA	; 250
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	60 e0       	ldi	r22, 0x00	; 0
 18e:	70 e0       	ldi	r23, 0x00	; 0
 190:	0e 94 1d 02 	call	0x43a	; 0x43a <LED_Converge_Diverge>
 194:	08 94       	sec
 196:	c1 1c       	adc	r12, r1
 198:	d1 1c       	adc	r13, r1
		for (uint32_t i = 0; i < 5;i++ )
		{
			LED_SnakeEffect('A',250);
		}
		
		for (uint32_t i = 0; i < 5;i++ )
 19a:	85 e0       	ldi	r24, 0x05	; 5
 19c:	c8 16       	cp	r12, r24
 19e:	d1 04       	cpc	r13, r1
 1a0:	91 f7       	brne	.-28     	; 0x186 <App_start+0xec>
void App_start(void)
{
	while(1)
	{
		
		for (uint32_t i = 0; i < 5;i++ )
 1a2:	75 01       	movw	r14, r10
 1a4:	64 01       	movw	r12, r8
 1a6:	8e cf       	rjmp	.-228    	; 0xc4 <App_start+0x2a>

000001a8 <BUTTON_init>:
#include "BUTTON_interface.h"
#include "../../MCAL/DIO Driver/DIO_interface.h"

void BUTTON_init(uint8_t port,uint8_t pin)
{
	DIO_write_pin(port,pin,INPUT);
 1a8:	40 e0       	ldi	r20, 0x00	; 0
 1aa:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 1ae:	08 95       	ret

000001b0 <BUTTON_u8get_value>:

uint8_t BUTTON_u8get_value(uint8_t port,uint8_t pin)
{
	uint8_t value = DIO_u8read_pin(port,pin);
 1b0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <DIO_u8read_pin>
	return value; 
}
 1b4:	08 95       	ret

000001b6 <LED_Init>:
#include "../../utilities/STD_Types.h"
#include "../../MCAL/DIO Driver/DIO_interface.h"
#include "LED_interface.h"

void LED_Init(uint8_t port,uint8_t pin)
{
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	d8 2f       	mov	r29, r24
 1bc:	c6 2f       	mov	r28, r22
	DIO_set_pin_dir(port,pin,OUTPUT);
 1be:	41 e0       	ldi	r20, 0x01	; 1
 1c0:	0e 94 87 02 	call	0x50e	; 0x50e <DIO_set_pin_dir>
	DIO_write_pin(port,pin,LOW);
 1c4:	8d 2f       	mov	r24, r29
 1c6:	6c 2f       	mov	r22, r28
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <LED_On>:

void LED_On(uint8_t port,uint8_t pin)
{
	DIO_write_pin(port,pin,HIGH);
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 1da:	08 95       	ret

000001dc <LED_Off>:

void LED_Off(uint8_t port,uint8_t pin)
{
	DIO_write_pin(port,pin,LOW);
 1dc:	40 e0       	ldi	r20, 0x00	; 0
 1de:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 1e2:	08 95       	ret

000001e4 <LED_Tog>:

void LED_Tog(uint8_t port,uint8_t pin)
{
	DIO_toggle_pin(port,pin);
 1e4:	0e 94 a9 03 	call	0x752	; 0x752 <DIO_toggle_pin>
}
 1e8:	08 95       	ret

000001ea <LED_Flash>:

void LED_Flash(uint8_t port,uint8_t pin,uint32_t delay)
{
	DIO_toggle_pin(port,pin);
 1ea:	0e 94 a9 03 	call	0x752	; 0x752 <DIO_toggle_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ee:	83 e2       	ldi	r24, 0x23	; 35
 1f0:	94 ef       	ldi	r25, 0xF4	; 244
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LED_Flash+0x8>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LED_Flash+0xe>
 1f8:	00 00       	nop
	_delay_ms(250);
}
 1fa:	08 95       	ret

000001fc <LED_InitPort>:

void LED_InitPort(uint8_t port)
{
 1fc:	cf 93       	push	r28
 1fe:	c8 2f       	mov	r28, r24
	DIO_set_port_dir(port,PORT_OUT);
 200:	6f ef       	ldi	r22, 0xFF	; 255
 202:	0e 94 3a 04 	call	0x874	; 0x874 <DIO_set_port_dir>
	DIO_write_port(port,PORT_LOW);
 206:	8c 2f       	mov	r24, r28
 208:	60 e0       	ldi	r22, 0x00	; 0
 20a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <DIO_write_port>
}
 20e:	cf 91       	pop	r28
 210:	08 95       	ret

00000212 <LED_FlashPort>:

void LED_FlashPort(uint8_t port,uint32_t delay)
{
	DIO_toggle_port(port);
 212:	0e 94 99 04 	call	0x932	; 0x932 <DIO_toggle_port>
 216:	8f e3       	ldi	r24, 0x3F	; 63
 218:	9d e0       	ldi	r25, 0x0D	; 13
 21a:	a3 e0       	ldi	r26, 0x03	; 3
 21c:	81 50       	subi	r24, 0x01	; 1
 21e:	90 40       	sbci	r25, 0x00	; 0
 220:	a0 40       	sbci	r26, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <LED_FlashPort+0xa>
 224:	00 c0       	rjmp	.+0      	; 0x226 <LED_FlashPort+0x14>
 226:	00 00       	nop
	_delay_ms(1000);
}
 228:	08 95       	ret

0000022a <LED_ShiftLeft>:

void LED_ShiftLeft(uint8_t port,uint32_t delay)
{
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	d8 2f       	mov	r29, r24
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 230:	c0 e0       	ldi	r28, 0x00	; 0
	{
		DIO_write_pin(port,pin_num-1,LOW);
 232:	6c 2f       	mov	r22, r28
 234:	61 50       	subi	r22, 0x01	; 1
 236:	8d 2f       	mov	r24, r29
 238:	40 e0       	ldi	r20, 0x00	; 0
 23a:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 23e:	8d 2f       	mov	r24, r29
 240:	6c 2f       	mov	r22, r28
 242:	41 e0       	ldi	r20, 0x01	; 1
 244:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 248:	83 e2       	ldi	r24, 0x23	; 35
 24a:	94 ef       	ldi	r25, 0xF4	; 244
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <LED_ShiftLeft+0x22>
 250:	00 c0       	rjmp	.+0      	; 0x252 <LED_ShiftLeft+0x28>
 252:	00 00       	nop
}

void LED_ShiftLeft(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 254:	cf 5f       	subi	r28, 0xFF	; 255
 256:	c8 30       	cpi	r28, 0x08	; 8
 258:	61 f7       	brne	.-40     	; 0x232 <LED_ShiftLeft+0x8>
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,7,LOW);
 25a:	8d 2f       	mov	r24, r29
 25c:	67 e0       	ldi	r22, 0x07	; 7
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <LED_ShiftRight>:

void LED_ShiftRight(uint8_t port,uint32_t delay)
{
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	d8 2f       	mov	r29, r24
	int8_t pin_num;
	for (pin_num = 7;pin_num >= 0; pin_num-- )
 270:	c7 e0       	ldi	r28, 0x07	; 7
		_delay_ms(250);
	}
	DIO_write_pin(port,7,LOW);
}

void LED_ShiftRight(uint8_t port,uint32_t delay)
 272:	6c 2f       	mov	r22, r28
 274:	6f 5f       	subi	r22, 0xFF	; 255
{
	int8_t pin_num;
	for (pin_num = 7;pin_num >= 0; pin_num-- )
	{
		DIO_write_pin(port,pin_num+1,LOW);
 276:	8d 2f       	mov	r24, r29
 278:	40 e0       	ldi	r20, 0x00	; 0
 27a:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 27e:	8d 2f       	mov	r24, r29
 280:	6c 2f       	mov	r22, r28
 282:	41 e0       	ldi	r20, 0x01	; 1
 284:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 288:	83 e2       	ldi	r24, 0x23	; 35
 28a:	94 ef       	ldi	r25, 0xF4	; 244
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <LED_ShiftRight+0x22>
 290:	00 c0       	rjmp	.+0      	; 0x292 <LED_ShiftRight+0x28>
 292:	00 00       	nop
}

void LED_ShiftRight(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 7;pin_num >= 0; pin_num-- )
 294:	c1 50       	subi	r28, 0x01	; 1
 296:	68 f7       	brcc	.-38     	; 0x272 <LED_ShiftRight+0x8>
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,0,LOW);
 298:	8d 2f       	mov	r24, r29
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	40 e0       	ldi	r20, 0x00	; 0
 29e:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	08 95       	ret

000002a8 <LED_Converge>:

void LED_Converge(uint8_t port,uint32_t delay)
{
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	d8 2f       	mov	r29, r24
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 2b2:	c0 e0       	ldi	r28, 0x00	; 0
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
 2b4:	08 e0       	ldi	r16, 0x08	; 8
		DIO_write_pin(port,7-pin_num,HIGH);
 2b6:	17 e0       	ldi	r17, 0x07	; 7
void LED_Converge(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
 2b8:	6c 2f       	mov	r22, r28
 2ba:	61 50       	subi	r22, 0x01	; 1
 2bc:	8d 2f       	mov	r24, r29
 2be:	40 e0       	ldi	r20, 0x00	; 0
 2c0:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 2c4:	8d 2f       	mov	r24, r29
 2c6:	6c 2f       	mov	r22, r28
 2c8:	41 e0       	ldi	r20, 0x01	; 1
 2ca:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,8-pin_num,LOW);
 2ce:	60 2f       	mov	r22, r16
 2d0:	6c 1b       	sub	r22, r28
 2d2:	8d 2f       	mov	r24, r29
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,7-pin_num,HIGH);
 2da:	61 2f       	mov	r22, r17
 2dc:	6c 1b       	sub	r22, r28
 2de:	8d 2f       	mov	r24, r29
 2e0:	41 e0       	ldi	r20, 0x01	; 1
 2e2:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 2e6:	83 e2       	ldi	r24, 0x23	; 35
 2e8:	94 ef       	ldi	r25, 0xF4	; 244
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <LED_Converge+0x42>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <LED_Converge+0x48>
 2f0:	00 00       	nop
}

void LED_Converge(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 2f2:	cf 5f       	subi	r28, 0xFF	; 255
 2f4:	c4 30       	cpi	r28, 0x04	; 4
 2f6:	01 f7       	brne	.-64     	; 0x2b8 <LED_Converge+0x10>
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,3,LOW);
 2f8:	8d 2f       	mov	r24, r29
 2fa:	63 e0       	ldi	r22, 0x03	; 3
 2fc:	40 e0       	ldi	r20, 0x00	; 0
 2fe:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	DIO_write_pin(port,4,LOW);
 302:	8d 2f       	mov	r24, r29
 304:	64 e0       	ldi	r22, 0x04	; 4
 306:	40 e0       	ldi	r20, 0x00	; 0
 308:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 30c:	df 91       	pop	r29
 30e:	cf 91       	pop	r28
 310:	1f 91       	pop	r17
 312:	0f 91       	pop	r16
 314:	08 95       	ret

00000316 <LED_Diverge>:

void LED_Diverge(uint8_t port,uint32_t delay)
{
 316:	0f 93       	push	r16
 318:	1f 93       	push	r17
 31a:	cf 93       	push	r28
 31c:	df 93       	push	r29
 31e:	d8 2f       	mov	r29, r24
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
 320:	c3 e0       	ldi	r28, 0x03	; 3
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,4,LOW);
}

void LED_Diverge(uint8_t port,uint32_t delay)
 322:	06 e0       	ldi	r16, 0x06	; 6
 324:	17 e0       	ldi	r17, 0x07	; 7
 326:	6c 2f       	mov	r22, r28
 328:	6f 5f       	subi	r22, 0xFF	; 255
{
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
 32a:	8d 2f       	mov	r24, r29
 32c:	40 e0       	ldi	r20, 0x00	; 0
 32e:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,4,LOW);
}

void LED_Diverge(uint8_t port,uint32_t delay)
 332:	60 2f       	mov	r22, r16
 334:	6c 1b       	sub	r22, r28
{
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
 336:	8d 2f       	mov	r24, r29
 338:	40 e0       	ldi	r20, 0x00	; 0
 33a:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 33e:	8d 2f       	mov	r24, r29
 340:	6c 2f       	mov	r22, r28
 342:	41 e0       	ldi	r20, 0x01	; 1
 344:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,4,LOW);
}

void LED_Diverge(uint8_t port,uint32_t delay)
 348:	61 2f       	mov	r22, r17
 34a:	6c 1b       	sub	r22, r28
	for (pin_num = 3;pin_num >= 0;pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
 34c:	8d 2f       	mov	r24, r29
 34e:	41 e0       	ldi	r20, 0x01	; 1
 350:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 354:	83 e2       	ldi	r24, 0x23	; 35
 356:	94 ef       	ldi	r25, 0xF4	; 244
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	f1 f7       	brne	.-4      	; 0x358 <LED_Diverge+0x42>
 35c:	00 c0       	rjmp	.+0      	; 0x35e <LED_Diverge+0x48>
 35e:	00 00       	nop
}

void LED_Diverge(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 3;pin_num >= 0;pin_num--)
 360:	c1 50       	subi	r28, 0x01	; 1
 362:	08 f7       	brcc	.-62     	; 0x326 <LED_Diverge+0x10>
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,0,LOW);
 364:	8d 2f       	mov	r24, r29
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	40 e0       	ldi	r20, 0x00	; 0
 36a:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	DIO_write_pin(port,7,LOW);
 36e:	8d 2f       	mov	r24, r29
 370:	67 e0       	ldi	r22, 0x07	; 7
 372:	40 e0       	ldi	r20, 0x00	; 0
 374:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	1f 91       	pop	r17
 37e:	0f 91       	pop	r16
 380:	08 95       	ret

00000382 <LED_PingPong>:

void LED_PingPong(uint8_t port,uint32_t delay)
{
 382:	cf 93       	push	r28
 384:	df 93       	push	r29
 386:	d8 2f       	mov	r29, r24
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 6; pin_num++ )
 388:	c0 e0       	ldi	r28, 0x00	; 0
	}
	DIO_write_pin(port,0,LOW);
	DIO_write_pin(port,7,LOW);
}

void LED_PingPong(uint8_t port,uint32_t delay)
 38a:	6c 2f       	mov	r22, r28
 38c:	61 50       	subi	r22, 0x01	; 1
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 6; pin_num++ )
	{
		DIO_write_pin(port,pin_num-1,LOW);
 38e:	8d 2f       	mov	r24, r29
 390:	40 e0       	ldi	r20, 0x00	; 0
 392:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 396:	8d 2f       	mov	r24, r29
 398:	6c 2f       	mov	r22, r28
 39a:	41 e0       	ldi	r20, 0x01	; 1
 39c:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 3a0:	83 e2       	ldi	r24, 0x23	; 35
 3a2:	94 ef       	ldi	r25, 0xF4	; 244
 3a4:	01 97       	sbiw	r24, 0x01	; 1
 3a6:	f1 f7       	brne	.-4      	; 0x3a4 <LED_PingPong+0x22>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <LED_PingPong+0x28>
 3aa:	00 00       	nop
}

void LED_PingPong(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 6; pin_num++ )
 3ac:	cf 5f       	subi	r28, 0xFF	; 255
 3ae:	c7 30       	cpi	r28, 0x07	; 7
 3b0:	61 f7       	brne	.-40     	; 0x38a <LED_PingPong+0x8>
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,6,LOW);
 3b2:	8d 2f       	mov	r24, r29
 3b4:	66 e0       	ldi	r22, 0x06	; 6
 3b6:	40 e0       	ldi	r20, 0x00	; 0
 3b8:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	}
	DIO_write_pin(port,0,LOW);
	DIO_write_pin(port,7,LOW);
}

void LED_PingPong(uint8_t port,uint32_t delay)
 3bc:	6c 2f       	mov	r22, r28
 3be:	6f 5f       	subi	r22, 0xFF	; 255
		_delay_ms(250);
	}
	DIO_write_pin(port,6,LOW);
	for (pin_num = 7;pin_num >= 1; pin_num-- )
	{
		DIO_write_pin(port,pin_num+1,LOW);
 3c0:	8d 2f       	mov	r24, r29
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 3c8:	8d 2f       	mov	r24, r29
 3ca:	6c 2f       	mov	r22, r28
 3cc:	41 e0       	ldi	r20, 0x01	; 1
 3ce:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 3d2:	83 e2       	ldi	r24, 0x23	; 35
 3d4:	94 ef       	ldi	r25, 0xF4	; 244
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <LED_PingPong+0x54>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <LED_PingPong+0x5a>
 3dc:	00 00       	nop
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,6,LOW);
	for (pin_num = 7;pin_num >= 1; pin_num-- )
 3de:	c1 50       	subi	r28, 0x01	; 1
 3e0:	69 f7       	brne	.-38     	; 0x3bc <LED_PingPong+0x3a>
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,1,LOW);
 3e2:	8d 2f       	mov	r24, r29
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	40 e0       	ldi	r20, 0x00	; 0
 3e8:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
}
 3ec:	df 91       	pop	r29
 3ee:	cf 91       	pop	r28
 3f0:	08 95       	ret

000003f2 <LED_SnakeEffect>:

void LED_SnakeEffect(uint8_t port,uint32_t delay)
{
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	d8 2f       	mov	r29, r24
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 3f8:	c0 e0       	ldi	r28, 0x00	; 0
	{
		DIO_write_pin(port,pin_num,HIGH);
 3fa:	8d 2f       	mov	r24, r29
 3fc:	6c 2f       	mov	r22, r28
 3fe:	41 e0       	ldi	r20, 0x01	; 1
 400:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 404:	83 e2       	ldi	r24, 0x23	; 35
 406:	94 ef       	ldi	r25, 0xF4	; 244
 408:	01 97       	sbiw	r24, 0x01	; 1
 40a:	f1 f7       	brne	.-4      	; 0x408 <LED_SnakeEffect+0x16>
 40c:	00 c0       	rjmp	.+0      	; 0x40e <LED_SnakeEffect+0x1c>
 40e:	00 00       	nop
}

void LED_SnakeEffect(uint8_t port,uint32_t delay)
{
	uint8_t pin_num;
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 410:	cf 5f       	subi	r28, 0xFF	; 255
 412:	c8 30       	cpi	r28, 0x08	; 8
 414:	91 f7       	brne	.-28     	; 0x3fa <LED_SnakeEffect+0x8>
 416:	c0 e0       	ldi	r28, 0x00	; 0
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	for (pin_num = 0;pin_num <= 7; pin_num++ )
	{
		DIO_write_pin(port,pin_num,LOW);
 418:	8d 2f       	mov	r24, r29
 41a:	6c 2f       	mov	r22, r28
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 422:	83 e2       	ldi	r24, 0x23	; 35
 424:	94 ef       	ldi	r25, 0xF4	; 244
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <LED_SnakeEffect+0x34>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <LED_SnakeEffect+0x3a>
 42c:	00 00       	nop
	for (pin_num = 0;pin_num <= 7; pin_num++ )
	{
		DIO_write_pin(port,pin_num,HIGH);
		_delay_ms(250);
	}
	for (pin_num = 0;pin_num <= 7; pin_num++ )
 42e:	cf 5f       	subi	r28, 0xFF	; 255
 430:	c8 30       	cpi	r28, 0x08	; 8
 432:	91 f7       	brne	.-28     	; 0x418 <LED_SnakeEffect+0x26>
	{
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}
 434:	df 91       	pop	r29
 436:	cf 91       	pop	r28
 438:	08 95       	ret

0000043a <LED_Converge_Diverge>:

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
{
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	c8 2f       	mov	r28, r24
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 444:	d0 e0       	ldi	r29, 0x00	; 0
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 446:	08 e0       	ldi	r16, 0x08	; 8
 448:	17 e0       	ldi	r17, 0x07	; 7
 44a:	6d 2f       	mov	r22, r29
 44c:	61 50       	subi	r22, 0x01	; 1
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
 44e:	8c 2f       	mov	r24, r28
 450:	40 e0       	ldi	r20, 0x00	; 0
 452:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 456:	8c 2f       	mov	r24, r28
 458:	6d 2f       	mov	r22, r29
 45a:	41 e0       	ldi	r20, 0x01	; 1
 45c:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 460:	60 2f       	mov	r22, r16
 462:	6d 1b       	sub	r22, r29
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
 464:	8c 2f       	mov	r24, r28
 466:	40 e0       	ldi	r20, 0x00	; 0
 468:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 46c:	61 2f       	mov	r22, r17
 46e:	6d 1b       	sub	r22, r29
	for (pin_num = 0;pin_num <= 3; pin_num++)
	{
		DIO_write_pin(port,pin_num-1,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
		DIO_write_pin(port,7-pin_num,HIGH);
 470:	8c 2f       	mov	r24, r28
 472:	41 e0       	ldi	r20, 0x01	; 1
 474:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 478:	83 e2       	ldi	r24, 0x23	; 35
 47a:	94 ef       	ldi	r25, 0xF4	; 244
 47c:	01 97       	sbiw	r24, 0x01	; 1
 47e:	f1 f7       	brne	.-4      	; 0x47c <LED_Converge_Diverge+0x42>
 480:	00 c0       	rjmp	.+0      	; 0x482 <LED_Converge_Diverge+0x48>
 482:	00 00       	nop
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
{
	int8_t pin_num;
	for (pin_num = 0;pin_num <= 3; pin_num++)
 484:	df 5f       	subi	r29, 0xFF	; 255
 486:	d4 30       	cpi	r29, 0x04	; 4
 488:	01 f7       	brne	.-64     	; 0x44a <LED_Converge_Diverge+0x10>
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,8-pin_num,LOW);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,3,LOW);
 48a:	8c 2f       	mov	r24, r28
 48c:	63 e0       	ldi	r22, 0x03	; 3
 48e:	40 e0       	ldi	r20, 0x00	; 0
 490:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	DIO_write_pin(port,3,LOW);
 494:	8c 2f       	mov	r24, r28
 496:	63 e0       	ldi	r22, 0x03	; 3
 498:	40 e0       	ldi	r20, 0x00	; 0
 49a:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	for (pin_num = 3;pin_num >= 0; pin_num--)
 49e:	d3 e0       	ldi	r29, 0x03	; 3
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 4a0:	06 e0       	ldi	r16, 0x06	; 6
 4a2:	17 e0       	ldi	r17, 0x07	; 7
 4a4:	6d 2f       	mov	r22, r29
 4a6:	6f 5f       	subi	r22, 0xFF	; 255
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,3,LOW);
	for (pin_num = 3;pin_num >= 0; pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
 4a8:	8c 2f       	mov	r24, r28
 4aa:	40 e0       	ldi	r20, 0x00	; 0
 4ac:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 4b0:	60 2f       	mov	r22, r16
 4b2:	6d 1b       	sub	r22, r29
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,3,LOW);
	for (pin_num = 3;pin_num >= 0; pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
 4b4:	8c 2f       	mov	r24, r28
 4b6:	40 e0       	ldi	r20, 0x00	; 0
 4b8:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,HIGH);
 4bc:	8c 2f       	mov	r24, r28
 4be:	6d 2f       	mov	r22, r29
 4c0:	41 e0       	ldi	r20, 0x01	; 1
 4c2:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
		DIO_write_pin(port,pin_num,LOW);
		_delay_ms(250);
	}
}

void LED_Converge_Diverge(uint8_t port,uint32_t delay)
 4c6:	61 2f       	mov	r22, r17
 4c8:	6d 1b       	sub	r22, r29
	for (pin_num = 3;pin_num >= 0; pin_num--)
	{
		DIO_write_pin(port,pin_num+1,LOW);
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
 4ca:	8c 2f       	mov	r24, r28
 4cc:	41 e0       	ldi	r20, 0x01	; 1
 4ce:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 4d2:	83 e2       	ldi	r24, 0x23	; 35
 4d4:	94 ef       	ldi	r25, 0xF4	; 244
 4d6:	01 97       	sbiw	r24, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <LED_Converge_Diverge+0x9c>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <LED_Converge_Diverge+0xa2>
 4dc:	00 00       	nop
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,3,LOW);
	DIO_write_pin(port,3,LOW);
	for (pin_num = 3;pin_num >= 0; pin_num--)
 4de:	d1 50       	subi	r29, 0x01	; 1
 4e0:	08 f7       	brcc	.-62     	; 0x4a4 <LED_Converge_Diverge+0x6a>
		DIO_write_pin(port,6-pin_num,LOW);
		DIO_write_pin(port,pin_num,HIGH);
		DIO_write_pin(port,7-pin_num,HIGH);
		_delay_ms(250);
	}
	DIO_write_pin(port,0,LOW);
 4e2:	8c 2f       	mov	r24, r28
 4e4:	60 e0       	ldi	r22, 0x00	; 0
 4e6:	40 e0       	ldi	r20, 0x00	; 0
 4e8:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
	DIO_write_pin(port,7,LOW);
 4ec:	8c 2f       	mov	r24, r28
 4ee:	67 e0       	ldi	r22, 0x07	; 7
 4f0:	40 e0       	ldi	r20, 0x00	; 0
 4f2:	0e 94 18 03 	call	0x630	; 0x630 <DIO_write_pin>
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	1f 91       	pop	r17
 4fc:	0f 91       	pop	r16
 4fe:	08 95       	ret

00000500 <main>:

#include "Application/application.h"

int main(void)
{
	App_init();
 500:	0e 94 49 00 	call	0x92	; 0x92 <App_init>
	
	App_start();
 504:	0e 94 4d 00 	call	0x9a	; 0x9a <App_start>
 508:	80 e0       	ldi	r24, 0x00	; 0
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	08 95       	ret

0000050e <DIO_set_pin_dir>:
 50e:	84 34       	cpi	r24, 0x44	; 68
 510:	09 f4       	brne	.+2      	; 0x514 <DIO_set_pin_dir+0x6>
 512:	71 c0       	rjmp	.+226    	; 0x5f6 <DIO_set_pin_dir+0xe8>
 514:	85 34       	cpi	r24, 0x45	; 69
 516:	48 f4       	brcc	.+18     	; 0x52a <DIO_set_pin_dir+0x1c>
 518:	82 34       	cpi	r24, 0x42	; 66
 51a:	99 f1       	breq	.+102    	; 0x582 <DIO_set_pin_dir+0x74>
 51c:	83 34       	cpi	r24, 0x43	; 67
 51e:	08 f0       	brcs	.+2      	; 0x522 <DIO_set_pin_dir+0x14>
 520:	4d c0       	rjmp	.+154    	; 0x5bc <DIO_set_pin_dir+0xae>
 522:	81 34       	cpi	r24, 0x41	; 65
 524:	09 f0       	breq	.+2      	; 0x528 <DIO_set_pin_dir+0x1a>
 526:	83 c0       	rjmp	.+262    	; 0x62e <DIO_set_pin_dir+0x120>
 528:	0f c0       	rjmp	.+30     	; 0x548 <DIO_set_pin_dir+0x3a>
 52a:	82 36       	cpi	r24, 0x62	; 98
 52c:	51 f1       	breq	.+84     	; 0x582 <DIO_set_pin_dir+0x74>
 52e:	83 36       	cpi	r24, 0x63	; 99
 530:	20 f4       	brcc	.+8      	; 0x53a <DIO_set_pin_dir+0x2c>
 532:	81 36       	cpi	r24, 0x61	; 97
 534:	09 f0       	breq	.+2      	; 0x538 <DIO_set_pin_dir+0x2a>
 536:	7b c0       	rjmp	.+246    	; 0x62e <DIO_set_pin_dir+0x120>
 538:	07 c0       	rjmp	.+14     	; 0x548 <DIO_set_pin_dir+0x3a>
 53a:	83 36       	cpi	r24, 0x63	; 99
 53c:	09 f4       	brne	.+2      	; 0x540 <DIO_set_pin_dir+0x32>
 53e:	3e c0       	rjmp	.+124    	; 0x5bc <DIO_set_pin_dir+0xae>
 540:	84 36       	cpi	r24, 0x64	; 100
 542:	09 f0       	breq	.+2      	; 0x546 <DIO_set_pin_dir+0x38>
 544:	74 c0       	rjmp	.+232    	; 0x62e <DIO_set_pin_dir+0x120>
 546:	57 c0       	rjmp	.+174    	; 0x5f6 <DIO_set_pin_dir+0xe8>
 548:	44 23       	and	r20, r20
 54a:	69 f0       	breq	.+26     	; 0x566 <DIO_set_pin_dir+0x58>
 54c:	2a b3       	in	r18, 0x1a	; 26
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	ac 01       	movw	r20, r24
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_set_pin_dir+0x4c>
 556:	44 0f       	add	r20, r20
 558:	55 1f       	adc	r21, r21
 55a:	6a 95       	dec	r22
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_set_pin_dir+0x48>
 55e:	ba 01       	movw	r22, r20
 560:	62 2b       	or	r22, r18
 562:	6a bb       	out	0x1a, r22	; 26
 564:	08 95       	ret
 566:	2a b3       	in	r18, 0x1a	; 26
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	ac 01       	movw	r20, r24
 56e:	02 c0       	rjmp	.+4      	; 0x574 <DIO_set_pin_dir+0x66>
 570:	44 0f       	add	r20, r20
 572:	55 1f       	adc	r21, r21
 574:	6a 95       	dec	r22
 576:	e2 f7       	brpl	.-8      	; 0x570 <DIO_set_pin_dir+0x62>
 578:	ba 01       	movw	r22, r20
 57a:	60 95       	com	r22
 57c:	62 23       	and	r22, r18
 57e:	6a bb       	out	0x1a, r22	; 26
 580:	08 95       	ret
 582:	44 23       	and	r20, r20
 584:	69 f0       	breq	.+26     	; 0x5a0 <DIO_set_pin_dir+0x92>
 586:	27 b3       	in	r18, 0x17	; 23
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	ac 01       	movw	r20, r24
 58e:	02 c0       	rjmp	.+4      	; 0x594 <DIO_set_pin_dir+0x86>
 590:	44 0f       	add	r20, r20
 592:	55 1f       	adc	r21, r21
 594:	6a 95       	dec	r22
 596:	e2 f7       	brpl	.-8      	; 0x590 <DIO_set_pin_dir+0x82>
 598:	ba 01       	movw	r22, r20
 59a:	62 2b       	or	r22, r18
 59c:	67 bb       	out	0x17, r22	; 23
 59e:	08 95       	ret
 5a0:	27 b3       	in	r18, 0x17	; 23
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	ac 01       	movw	r20, r24
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_set_pin_dir+0xa0>
 5aa:	44 0f       	add	r20, r20
 5ac:	55 1f       	adc	r21, r21
 5ae:	6a 95       	dec	r22
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_set_pin_dir+0x9c>
 5b2:	ba 01       	movw	r22, r20
 5b4:	60 95       	com	r22
 5b6:	62 23       	and	r22, r18
 5b8:	67 bb       	out	0x17, r22	; 23
 5ba:	08 95       	ret
 5bc:	44 23       	and	r20, r20
 5be:	69 f0       	breq	.+26     	; 0x5da <DIO_set_pin_dir+0xcc>
 5c0:	24 b3       	in	r18, 0x14	; 20
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	ac 01       	movw	r20, r24
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <DIO_set_pin_dir+0xc0>
 5ca:	44 0f       	add	r20, r20
 5cc:	55 1f       	adc	r21, r21
 5ce:	6a 95       	dec	r22
 5d0:	e2 f7       	brpl	.-8      	; 0x5ca <DIO_set_pin_dir+0xbc>
 5d2:	ba 01       	movw	r22, r20
 5d4:	62 2b       	or	r22, r18
 5d6:	64 bb       	out	0x14, r22	; 20
 5d8:	08 95       	ret
 5da:	24 b3       	in	r18, 0x14	; 20
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	ac 01       	movw	r20, r24
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <DIO_set_pin_dir+0xda>
 5e4:	44 0f       	add	r20, r20
 5e6:	55 1f       	adc	r21, r21
 5e8:	6a 95       	dec	r22
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <DIO_set_pin_dir+0xd6>
 5ec:	ba 01       	movw	r22, r20
 5ee:	60 95       	com	r22
 5f0:	62 23       	and	r22, r18
 5f2:	64 bb       	out	0x14, r22	; 20
 5f4:	08 95       	ret
 5f6:	44 23       	and	r20, r20
 5f8:	69 f0       	breq	.+26     	; 0x614 <DIO_set_pin_dir+0x106>
 5fa:	21 b3       	in	r18, 0x11	; 17
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	ac 01       	movw	r20, r24
 602:	02 c0       	rjmp	.+4      	; 0x608 <DIO_set_pin_dir+0xfa>
 604:	44 0f       	add	r20, r20
 606:	55 1f       	adc	r21, r21
 608:	6a 95       	dec	r22
 60a:	e2 f7       	brpl	.-8      	; 0x604 <DIO_set_pin_dir+0xf6>
 60c:	ba 01       	movw	r22, r20
 60e:	62 2b       	or	r22, r18
 610:	61 bb       	out	0x11, r22	; 17
 612:	08 95       	ret
 614:	21 b3       	in	r18, 0x11	; 17
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	ac 01       	movw	r20, r24
 61c:	02 c0       	rjmp	.+4      	; 0x622 <DIO_set_pin_dir+0x114>
 61e:	44 0f       	add	r20, r20
 620:	55 1f       	adc	r21, r21
 622:	6a 95       	dec	r22
 624:	e2 f7       	brpl	.-8      	; 0x61e <DIO_set_pin_dir+0x110>
 626:	ba 01       	movw	r22, r20
 628:	60 95       	com	r22
 62a:	62 23       	and	r22, r18
 62c:	61 bb       	out	0x11, r22	; 17
 62e:	08 95       	ret

00000630 <DIO_write_pin>:
 630:	84 34       	cpi	r24, 0x44	; 68
 632:	09 f4       	brne	.+2      	; 0x636 <DIO_write_pin+0x6>
 634:	71 c0       	rjmp	.+226    	; 0x718 <DIO_write_pin+0xe8>
 636:	85 34       	cpi	r24, 0x45	; 69
 638:	48 f4       	brcc	.+18     	; 0x64c <DIO_write_pin+0x1c>
 63a:	82 34       	cpi	r24, 0x42	; 66
 63c:	99 f1       	breq	.+102    	; 0x6a4 <DIO_write_pin+0x74>
 63e:	83 34       	cpi	r24, 0x43	; 67
 640:	08 f0       	brcs	.+2      	; 0x644 <DIO_write_pin+0x14>
 642:	4d c0       	rjmp	.+154    	; 0x6de <DIO_write_pin+0xae>
 644:	81 34       	cpi	r24, 0x41	; 65
 646:	09 f0       	breq	.+2      	; 0x64a <DIO_write_pin+0x1a>
 648:	83 c0       	rjmp	.+262    	; 0x750 <DIO_write_pin+0x120>
 64a:	0f c0       	rjmp	.+30     	; 0x66a <DIO_write_pin+0x3a>
 64c:	82 36       	cpi	r24, 0x62	; 98
 64e:	51 f1       	breq	.+84     	; 0x6a4 <DIO_write_pin+0x74>
 650:	83 36       	cpi	r24, 0x63	; 99
 652:	20 f4       	brcc	.+8      	; 0x65c <DIO_write_pin+0x2c>
 654:	81 36       	cpi	r24, 0x61	; 97
 656:	09 f0       	breq	.+2      	; 0x65a <DIO_write_pin+0x2a>
 658:	7b c0       	rjmp	.+246    	; 0x750 <DIO_write_pin+0x120>
 65a:	07 c0       	rjmp	.+14     	; 0x66a <DIO_write_pin+0x3a>
 65c:	83 36       	cpi	r24, 0x63	; 99
 65e:	09 f4       	brne	.+2      	; 0x662 <DIO_write_pin+0x32>
 660:	3e c0       	rjmp	.+124    	; 0x6de <DIO_write_pin+0xae>
 662:	84 36       	cpi	r24, 0x64	; 100
 664:	09 f0       	breq	.+2      	; 0x668 <DIO_write_pin+0x38>
 666:	74 c0       	rjmp	.+232    	; 0x750 <DIO_write_pin+0x120>
 668:	57 c0       	rjmp	.+174    	; 0x718 <DIO_write_pin+0xe8>
 66a:	44 23       	and	r20, r20
 66c:	69 f0       	breq	.+26     	; 0x688 <DIO_write_pin+0x58>
 66e:	2b b3       	in	r18, 0x1b	; 27
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	ac 01       	movw	r20, r24
 676:	02 c0       	rjmp	.+4      	; 0x67c <DIO_write_pin+0x4c>
 678:	44 0f       	add	r20, r20
 67a:	55 1f       	adc	r21, r21
 67c:	6a 95       	dec	r22
 67e:	e2 f7       	brpl	.-8      	; 0x678 <DIO_write_pin+0x48>
 680:	ba 01       	movw	r22, r20
 682:	62 2b       	or	r22, r18
 684:	6b bb       	out	0x1b, r22	; 27
 686:	08 95       	ret
 688:	2b b3       	in	r18, 0x1b	; 27
 68a:	81 e0       	ldi	r24, 0x01	; 1
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	ac 01       	movw	r20, r24
 690:	02 c0       	rjmp	.+4      	; 0x696 <DIO_write_pin+0x66>
 692:	44 0f       	add	r20, r20
 694:	55 1f       	adc	r21, r21
 696:	6a 95       	dec	r22
 698:	e2 f7       	brpl	.-8      	; 0x692 <DIO_write_pin+0x62>
 69a:	ba 01       	movw	r22, r20
 69c:	60 95       	com	r22
 69e:	62 23       	and	r22, r18
 6a0:	6b bb       	out	0x1b, r22	; 27
 6a2:	08 95       	ret
 6a4:	44 23       	and	r20, r20
 6a6:	69 f0       	breq	.+26     	; 0x6c2 <DIO_write_pin+0x92>
 6a8:	28 b3       	in	r18, 0x18	; 24
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	ac 01       	movw	r20, r24
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <DIO_write_pin+0x86>
 6b2:	44 0f       	add	r20, r20
 6b4:	55 1f       	adc	r21, r21
 6b6:	6a 95       	dec	r22
 6b8:	e2 f7       	brpl	.-8      	; 0x6b2 <DIO_write_pin+0x82>
 6ba:	ba 01       	movw	r22, r20
 6bc:	62 2b       	or	r22, r18
 6be:	68 bb       	out	0x18, r22	; 24
 6c0:	08 95       	ret
 6c2:	28 b3       	in	r18, 0x18	; 24
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	ac 01       	movw	r20, r24
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <DIO_write_pin+0xa0>
 6cc:	44 0f       	add	r20, r20
 6ce:	55 1f       	adc	r21, r21
 6d0:	6a 95       	dec	r22
 6d2:	e2 f7       	brpl	.-8      	; 0x6cc <DIO_write_pin+0x9c>
 6d4:	ba 01       	movw	r22, r20
 6d6:	60 95       	com	r22
 6d8:	62 23       	and	r22, r18
 6da:	68 bb       	out	0x18, r22	; 24
 6dc:	08 95       	ret
 6de:	44 23       	and	r20, r20
 6e0:	69 f0       	breq	.+26     	; 0x6fc <DIO_write_pin+0xcc>
 6e2:	25 b3       	in	r18, 0x15	; 21
 6e4:	81 e0       	ldi	r24, 0x01	; 1
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	ac 01       	movw	r20, r24
 6ea:	02 c0       	rjmp	.+4      	; 0x6f0 <DIO_write_pin+0xc0>
 6ec:	44 0f       	add	r20, r20
 6ee:	55 1f       	adc	r21, r21
 6f0:	6a 95       	dec	r22
 6f2:	e2 f7       	brpl	.-8      	; 0x6ec <DIO_write_pin+0xbc>
 6f4:	ba 01       	movw	r22, r20
 6f6:	62 2b       	or	r22, r18
 6f8:	65 bb       	out	0x15, r22	; 21
 6fa:	08 95       	ret
 6fc:	25 b3       	in	r18, 0x15	; 21
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	ac 01       	movw	r20, r24
 704:	02 c0       	rjmp	.+4      	; 0x70a <DIO_write_pin+0xda>
 706:	44 0f       	add	r20, r20
 708:	55 1f       	adc	r21, r21
 70a:	6a 95       	dec	r22
 70c:	e2 f7       	brpl	.-8      	; 0x706 <DIO_write_pin+0xd6>
 70e:	ba 01       	movw	r22, r20
 710:	60 95       	com	r22
 712:	62 23       	and	r22, r18
 714:	65 bb       	out	0x15, r22	; 21
 716:	08 95       	ret
 718:	44 23       	and	r20, r20
 71a:	69 f0       	breq	.+26     	; 0x736 <DIO_write_pin+0x106>
 71c:	22 b3       	in	r18, 0x12	; 18
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	ac 01       	movw	r20, r24
 724:	02 c0       	rjmp	.+4      	; 0x72a <DIO_write_pin+0xfa>
 726:	44 0f       	add	r20, r20
 728:	55 1f       	adc	r21, r21
 72a:	6a 95       	dec	r22
 72c:	e2 f7       	brpl	.-8      	; 0x726 <DIO_write_pin+0xf6>
 72e:	ba 01       	movw	r22, r20
 730:	62 2b       	or	r22, r18
 732:	62 bb       	out	0x12, r22	; 18
 734:	08 95       	ret
 736:	22 b3       	in	r18, 0x12	; 18
 738:	81 e0       	ldi	r24, 0x01	; 1
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	ac 01       	movw	r20, r24
 73e:	02 c0       	rjmp	.+4      	; 0x744 <DIO_write_pin+0x114>
 740:	44 0f       	add	r20, r20
 742:	55 1f       	adc	r21, r21
 744:	6a 95       	dec	r22
 746:	e2 f7       	brpl	.-8      	; 0x740 <DIO_write_pin+0x110>
 748:	ba 01       	movw	r22, r20
 74a:	60 95       	com	r22
 74c:	62 23       	and	r22, r18
 74e:	62 bb       	out	0x12, r22	; 18
 750:	08 95       	ret

00000752 <DIO_toggle_pin>:
 752:	84 34       	cpi	r24, 0x44	; 68
 754:	09 f4       	brne	.+2      	; 0x758 <DIO_toggle_pin+0x6>
 756:	3d c0       	rjmp	.+122    	; 0x7d2 <DIO_toggle_pin+0x80>
 758:	85 34       	cpi	r24, 0x45	; 69
 75a:	40 f4       	brcc	.+16     	; 0x76c <DIO_toggle_pin+0x1a>
 75c:	82 34       	cpi	r24, 0x42	; 66
 75e:	f9 f0       	breq	.+62     	; 0x79e <DIO_toggle_pin+0x4c>
 760:	83 34       	cpi	r24, 0x43	; 67
 762:	50 f5       	brcc	.+84     	; 0x7b8 <DIO_toggle_pin+0x66>
 764:	81 34       	cpi	r24, 0x41	; 65
 766:	09 f0       	breq	.+2      	; 0x76a <DIO_toggle_pin+0x18>
 768:	40 c0       	rjmp	.+128    	; 0x7ea <DIO_toggle_pin+0x98>
 76a:	0c c0       	rjmp	.+24     	; 0x784 <DIO_toggle_pin+0x32>
 76c:	82 36       	cpi	r24, 0x62	; 98
 76e:	b9 f0       	breq	.+46     	; 0x79e <DIO_toggle_pin+0x4c>
 770:	83 36       	cpi	r24, 0x63	; 99
 772:	18 f4       	brcc	.+6      	; 0x77a <DIO_toggle_pin+0x28>
 774:	81 36       	cpi	r24, 0x61	; 97
 776:	c9 f5       	brne	.+114    	; 0x7ea <DIO_toggle_pin+0x98>
 778:	05 c0       	rjmp	.+10     	; 0x784 <DIO_toggle_pin+0x32>
 77a:	83 36       	cpi	r24, 0x63	; 99
 77c:	e9 f0       	breq	.+58     	; 0x7b8 <DIO_toggle_pin+0x66>
 77e:	84 36       	cpi	r24, 0x64	; 100
 780:	a1 f5       	brne	.+104    	; 0x7ea <DIO_toggle_pin+0x98>
 782:	27 c0       	rjmp	.+78     	; 0x7d2 <DIO_toggle_pin+0x80>
 784:	2b b3       	in	r18, 0x1b	; 27
 786:	81 e0       	ldi	r24, 0x01	; 1
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	ac 01       	movw	r20, r24
 78c:	02 c0       	rjmp	.+4      	; 0x792 <DIO_toggle_pin+0x40>
 78e:	44 0f       	add	r20, r20
 790:	55 1f       	adc	r21, r21
 792:	6a 95       	dec	r22
 794:	e2 f7       	brpl	.-8      	; 0x78e <DIO_toggle_pin+0x3c>
 796:	ba 01       	movw	r22, r20
 798:	62 27       	eor	r22, r18
 79a:	6b bb       	out	0x1b, r22	; 27
 79c:	08 95       	ret
 79e:	28 b3       	in	r18, 0x18	; 24
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	ac 01       	movw	r20, r24
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <DIO_toggle_pin+0x5a>
 7a8:	44 0f       	add	r20, r20
 7aa:	55 1f       	adc	r21, r21
 7ac:	6a 95       	dec	r22
 7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <DIO_toggle_pin+0x56>
 7b0:	ba 01       	movw	r22, r20
 7b2:	62 27       	eor	r22, r18
 7b4:	68 bb       	out	0x18, r22	; 24
 7b6:	08 95       	ret
 7b8:	25 b3       	in	r18, 0x15	; 21
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	ac 01       	movw	r20, r24
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <DIO_toggle_pin+0x74>
 7c2:	44 0f       	add	r20, r20
 7c4:	55 1f       	adc	r21, r21
 7c6:	6a 95       	dec	r22
 7c8:	e2 f7       	brpl	.-8      	; 0x7c2 <DIO_toggle_pin+0x70>
 7ca:	ba 01       	movw	r22, r20
 7cc:	62 27       	eor	r22, r18
 7ce:	65 bb       	out	0x15, r22	; 21
 7d0:	08 95       	ret
 7d2:	22 b3       	in	r18, 0x12	; 18
 7d4:	81 e0       	ldi	r24, 0x01	; 1
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	ac 01       	movw	r20, r24
 7da:	02 c0       	rjmp	.+4      	; 0x7e0 <DIO_toggle_pin+0x8e>
 7dc:	44 0f       	add	r20, r20
 7de:	55 1f       	adc	r21, r21
 7e0:	6a 95       	dec	r22
 7e2:	e2 f7       	brpl	.-8      	; 0x7dc <DIO_toggle_pin+0x8a>
 7e4:	ba 01       	movw	r22, r20
 7e6:	62 27       	eor	r22, r18
 7e8:	62 bb       	out	0x12, r22	; 18
 7ea:	08 95       	ret

000007ec <DIO_u8read_pin>:
 7ec:	84 34       	cpi	r24, 0x44	; 68
 7ee:	b1 f1       	breq	.+108    	; 0x85c <DIO_u8read_pin+0x70>
 7f0:	85 34       	cpi	r24, 0x45	; 69
 7f2:	38 f4       	brcc	.+14     	; 0x802 <DIO_u8read_pin+0x16>
 7f4:	82 34       	cpi	r24, 0x42	; 66
 7f6:	e1 f0       	breq	.+56     	; 0x830 <DIO_u8read_pin+0x44>
 7f8:	83 34       	cpi	r24, 0x43	; 67
 7fa:	28 f5       	brcc	.+74     	; 0x846 <DIO_u8read_pin+0x5a>
 7fc:	81 34       	cpi	r24, 0x41	; 65
 7fe:	c1 f5       	brne	.+112    	; 0x870 <__stack+0x11>
 800:	0c c0       	rjmp	.+24     	; 0x81a <DIO_u8read_pin+0x2e>
 802:	82 36       	cpi	r24, 0x62	; 98
 804:	a9 f0       	breq	.+42     	; 0x830 <DIO_u8read_pin+0x44>
 806:	83 36       	cpi	r24, 0x63	; 99
 808:	18 f4       	brcc	.+6      	; 0x810 <DIO_u8read_pin+0x24>
 80a:	81 36       	cpi	r24, 0x61	; 97
 80c:	89 f5       	brne	.+98     	; 0x870 <__stack+0x11>
 80e:	05 c0       	rjmp	.+10     	; 0x81a <DIO_u8read_pin+0x2e>
 810:	83 36       	cpi	r24, 0x63	; 99
 812:	c9 f0       	breq	.+50     	; 0x846 <DIO_u8read_pin+0x5a>
 814:	84 36       	cpi	r24, 0x64	; 100
 816:	61 f5       	brne	.+88     	; 0x870 <__stack+0x11>
 818:	21 c0       	rjmp	.+66     	; 0x85c <DIO_u8read_pin+0x70>
 81a:	29 b3       	in	r18, 0x19	; 25
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	c9 01       	movw	r24, r18
 820:	02 c0       	rjmp	.+4      	; 0x826 <DIO_u8read_pin+0x3a>
 822:	95 95       	asr	r25
 824:	87 95       	ror	r24
 826:	6a 95       	dec	r22
 828:	e2 f7       	brpl	.-8      	; 0x822 <DIO_u8read_pin+0x36>
 82a:	98 2f       	mov	r25, r24
 82c:	91 70       	andi	r25, 0x01	; 1
 82e:	20 c0       	rjmp	.+64     	; 0x870 <__stack+0x11>
 830:	26 b3       	in	r18, 0x16	; 22
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	c9 01       	movw	r24, r18
 836:	02 c0       	rjmp	.+4      	; 0x83c <DIO_u8read_pin+0x50>
 838:	95 95       	asr	r25
 83a:	87 95       	ror	r24
 83c:	6a 95       	dec	r22
 83e:	e2 f7       	brpl	.-8      	; 0x838 <DIO_u8read_pin+0x4c>
 840:	98 2f       	mov	r25, r24
 842:	91 70       	andi	r25, 0x01	; 1
 844:	15 c0       	rjmp	.+42     	; 0x870 <__stack+0x11>
 846:	23 b3       	in	r18, 0x13	; 19
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	c9 01       	movw	r24, r18
 84c:	02 c0       	rjmp	.+4      	; 0x852 <DIO_u8read_pin+0x66>
 84e:	95 95       	asr	r25
 850:	87 95       	ror	r24
 852:	6a 95       	dec	r22
 854:	e2 f7       	brpl	.-8      	; 0x84e <DIO_u8read_pin+0x62>
 856:	98 2f       	mov	r25, r24
 858:	91 70       	andi	r25, 0x01	; 1
 85a:	0a c0       	rjmp	.+20     	; 0x870 <__stack+0x11>
 85c:	20 b3       	in	r18, 0x10	; 16
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	c9 01       	movw	r24, r18
 862:	02 c0       	rjmp	.+4      	; 0x868 <__stack+0x9>
 864:	95 95       	asr	r25
 866:	87 95       	ror	r24
 868:	6a 95       	dec	r22
 86a:	e2 f7       	brpl	.-8      	; 0x864 <__stack+0x5>
 86c:	98 2f       	mov	r25, r24
 86e:	91 70       	andi	r25, 0x01	; 1
 870:	89 2f       	mov	r24, r25
 872:	08 95       	ret

00000874 <DIO_set_port_dir>:
 874:	84 34       	cpi	r24, 0x44	; 68
 876:	d9 f0       	breq	.+54     	; 0x8ae <DIO_set_port_dir+0x3a>
 878:	85 34       	cpi	r24, 0x45	; 69
 87a:	38 f4       	brcc	.+14     	; 0x88a <DIO_set_port_dir+0x16>
 87c:	82 34       	cpi	r24, 0x42	; 66
 87e:	99 f0       	breq	.+38     	; 0x8a6 <DIO_set_port_dir+0x32>
 880:	83 34       	cpi	r24, 0x43	; 67
 882:	98 f4       	brcc	.+38     	; 0x8aa <DIO_set_port_dir+0x36>
 884:	81 34       	cpi	r24, 0x41	; 65
 886:	a1 f4       	brne	.+40     	; 0x8b0 <DIO_set_port_dir+0x3c>
 888:	0c c0       	rjmp	.+24     	; 0x8a2 <DIO_set_port_dir+0x2e>
 88a:	82 36       	cpi	r24, 0x62	; 98
 88c:	61 f0       	breq	.+24     	; 0x8a6 <DIO_set_port_dir+0x32>
 88e:	83 36       	cpi	r24, 0x63	; 99
 890:	18 f4       	brcc	.+6      	; 0x898 <DIO_set_port_dir+0x24>
 892:	81 36       	cpi	r24, 0x61	; 97
 894:	69 f4       	brne	.+26     	; 0x8b0 <DIO_set_port_dir+0x3c>
 896:	05 c0       	rjmp	.+10     	; 0x8a2 <DIO_set_port_dir+0x2e>
 898:	83 36       	cpi	r24, 0x63	; 99
 89a:	39 f0       	breq	.+14     	; 0x8aa <DIO_set_port_dir+0x36>
 89c:	84 36       	cpi	r24, 0x64	; 100
 89e:	41 f4       	brne	.+16     	; 0x8b0 <DIO_set_port_dir+0x3c>
 8a0:	06 c0       	rjmp	.+12     	; 0x8ae <DIO_set_port_dir+0x3a>
 8a2:	6a bb       	out	0x1a, r22	; 26
 8a4:	08 95       	ret
 8a6:	67 bb       	out	0x17, r22	; 23
 8a8:	08 95       	ret
 8aa:	64 bb       	out	0x14, r22	; 20
 8ac:	08 95       	ret
 8ae:	61 bb       	out	0x11, r22	; 17
 8b0:	08 95       	ret

000008b2 <DIO_write_port>:
 8b2:	84 34       	cpi	r24, 0x44	; 68
 8b4:	d9 f0       	breq	.+54     	; 0x8ec <DIO_write_port+0x3a>
 8b6:	85 34       	cpi	r24, 0x45	; 69
 8b8:	38 f4       	brcc	.+14     	; 0x8c8 <DIO_write_port+0x16>
 8ba:	82 34       	cpi	r24, 0x42	; 66
 8bc:	99 f0       	breq	.+38     	; 0x8e4 <DIO_write_port+0x32>
 8be:	83 34       	cpi	r24, 0x43	; 67
 8c0:	98 f4       	brcc	.+38     	; 0x8e8 <DIO_write_port+0x36>
 8c2:	81 34       	cpi	r24, 0x41	; 65
 8c4:	a1 f4       	brne	.+40     	; 0x8ee <DIO_write_port+0x3c>
 8c6:	0c c0       	rjmp	.+24     	; 0x8e0 <DIO_write_port+0x2e>
 8c8:	82 36       	cpi	r24, 0x62	; 98
 8ca:	61 f0       	breq	.+24     	; 0x8e4 <DIO_write_port+0x32>
 8cc:	83 36       	cpi	r24, 0x63	; 99
 8ce:	18 f4       	brcc	.+6      	; 0x8d6 <DIO_write_port+0x24>
 8d0:	81 36       	cpi	r24, 0x61	; 97
 8d2:	69 f4       	brne	.+26     	; 0x8ee <DIO_write_port+0x3c>
 8d4:	05 c0       	rjmp	.+10     	; 0x8e0 <DIO_write_port+0x2e>
 8d6:	83 36       	cpi	r24, 0x63	; 99
 8d8:	39 f0       	breq	.+14     	; 0x8e8 <DIO_write_port+0x36>
 8da:	84 36       	cpi	r24, 0x64	; 100
 8dc:	41 f4       	brne	.+16     	; 0x8ee <DIO_write_port+0x3c>
 8de:	06 c0       	rjmp	.+12     	; 0x8ec <DIO_write_port+0x3a>
 8e0:	6b bb       	out	0x1b, r22	; 27
 8e2:	08 95       	ret
 8e4:	68 bb       	out	0x18, r22	; 24
 8e6:	08 95       	ret
 8e8:	68 bb       	out	0x18, r22	; 24
 8ea:	08 95       	ret
 8ec:	62 bb       	out	0x12, r22	; 18
 8ee:	08 95       	ret

000008f0 <DIO_u8read_port>:
 8f0:	84 34       	cpi	r24, 0x44	; 68
 8f2:	d9 f0       	breq	.+54     	; 0x92a <DIO_u8read_port+0x3a>
 8f4:	85 34       	cpi	r24, 0x45	; 69
 8f6:	38 f4       	brcc	.+14     	; 0x906 <DIO_u8read_port+0x16>
 8f8:	82 34       	cpi	r24, 0x42	; 66
 8fa:	99 f0       	breq	.+38     	; 0x922 <DIO_u8read_port+0x32>
 8fc:	83 34       	cpi	r24, 0x43	; 67
 8fe:	98 f4       	brcc	.+38     	; 0x926 <DIO_u8read_port+0x36>
 900:	81 34       	cpi	r24, 0x41	; 65
 902:	a1 f4       	brne	.+40     	; 0x92c <DIO_u8read_port+0x3c>
 904:	0c c0       	rjmp	.+24     	; 0x91e <DIO_u8read_port+0x2e>
 906:	82 36       	cpi	r24, 0x62	; 98
 908:	61 f0       	breq	.+24     	; 0x922 <DIO_u8read_port+0x32>
 90a:	83 36       	cpi	r24, 0x63	; 99
 90c:	18 f4       	brcc	.+6      	; 0x914 <DIO_u8read_port+0x24>
 90e:	81 36       	cpi	r24, 0x61	; 97
 910:	69 f4       	brne	.+26     	; 0x92c <DIO_u8read_port+0x3c>
 912:	05 c0       	rjmp	.+10     	; 0x91e <DIO_u8read_port+0x2e>
 914:	83 36       	cpi	r24, 0x63	; 99
 916:	39 f0       	breq	.+14     	; 0x926 <DIO_u8read_port+0x36>
 918:	84 36       	cpi	r24, 0x64	; 100
 91a:	41 f4       	brne	.+16     	; 0x92c <DIO_u8read_port+0x3c>
 91c:	06 c0       	rjmp	.+12     	; 0x92a <DIO_u8read_port+0x3a>
 91e:	99 b3       	in	r25, 0x19	; 25
 920:	05 c0       	rjmp	.+10     	; 0x92c <DIO_u8read_port+0x3c>
 922:	96 b3       	in	r25, 0x16	; 22
 924:	03 c0       	rjmp	.+6      	; 0x92c <DIO_u8read_port+0x3c>
 926:	93 b3       	in	r25, 0x13	; 19
 928:	01 c0       	rjmp	.+2      	; 0x92c <DIO_u8read_port+0x3c>
 92a:	90 b3       	in	r25, 0x10	; 16
 92c:	89 2f       	mov	r24, r25
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	08 95       	ret

00000932 <DIO_toggle_port>:
 932:	84 34       	cpi	r24, 0x44	; 68
 934:	09 f1       	breq	.+66     	; 0x978 <DIO_toggle_port+0x46>
 936:	85 34       	cpi	r24, 0x45	; 69
 938:	38 f4       	brcc	.+14     	; 0x948 <DIO_toggle_port+0x16>
 93a:	82 34       	cpi	r24, 0x42	; 66
 93c:	a9 f0       	breq	.+42     	; 0x968 <DIO_toggle_port+0x36>
 93e:	83 34       	cpi	r24, 0x43	; 67
 940:	b8 f4       	brcc	.+46     	; 0x970 <DIO_toggle_port+0x3e>
 942:	81 34       	cpi	r24, 0x41	; 65
 944:	e1 f4       	brne	.+56     	; 0x97e <DIO_toggle_port+0x4c>
 946:	0c c0       	rjmp	.+24     	; 0x960 <DIO_toggle_port+0x2e>
 948:	82 36       	cpi	r24, 0x62	; 98
 94a:	71 f0       	breq	.+28     	; 0x968 <DIO_toggle_port+0x36>
 94c:	83 36       	cpi	r24, 0x63	; 99
 94e:	18 f4       	brcc	.+6      	; 0x956 <DIO_toggle_port+0x24>
 950:	81 36       	cpi	r24, 0x61	; 97
 952:	a9 f4       	brne	.+42     	; 0x97e <DIO_toggle_port+0x4c>
 954:	05 c0       	rjmp	.+10     	; 0x960 <DIO_toggle_port+0x2e>
 956:	83 36       	cpi	r24, 0x63	; 99
 958:	59 f0       	breq	.+22     	; 0x970 <DIO_toggle_port+0x3e>
 95a:	84 36       	cpi	r24, 0x64	; 100
 95c:	81 f4       	brne	.+32     	; 0x97e <DIO_toggle_port+0x4c>
 95e:	0c c0       	rjmp	.+24     	; 0x978 <DIO_toggle_port+0x46>
 960:	8b b3       	in	r24, 0x1b	; 27
 962:	80 95       	com	r24
 964:	8b bb       	out	0x1b, r24	; 27
 966:	08 95       	ret
 968:	88 b3       	in	r24, 0x18	; 24
 96a:	80 95       	com	r24
 96c:	88 bb       	out	0x18, r24	; 24
 96e:	08 95       	ret
 970:	85 b3       	in	r24, 0x15	; 21
 972:	80 95       	com	r24
 974:	85 bb       	out	0x15, r24	; 21
 976:	08 95       	ret
 978:	82 b3       	in	r24, 0x12	; 18
 97a:	80 95       	com	r24
 97c:	82 bb       	out	0x12, r24	; 18
 97e:	08 95       	ret

00000980 <_exit>:
 980:	f8 94       	cli

00000982 <__stop_program>:
 982:	ff cf       	rjmp	.-2      	; 0x982 <__stop_program>
